
=== Translation #1 ===
The SHACL shape :Dokumentenname applies to all instances of the class edifact-o:InvoiceDetails, specifying that the property edifact-o:hasDocumentType must be a string with a value of either "Commercial invoice", "Credit advice", "Value credit", "Value debit", "Handelsrechnung", "Gutschriftsanzeige", "Wertgutschrift", or "Wertbelastung", and must occur exactly once, with validation failure resulting in the message "Data element 1001 is missing in the BGM segment" if this constraint is not met.

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:Dokumentenname a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasDocumentType ;
    sh:datatype xsd:string ;
    sh:in ( "Commercial invoice" "Credit advice" "Value credit" "Value debit" "Handelsrechnung" "Gutschriftsanzeige" "Wertgutschrift" "Wertbelastung" ) ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "Data element 1001 is missing in the BGM segment" ;
  ] .
```
Note that I added the `xsd:` prefix for the `xsd:string` datatype, and defined the `edifact-o:` prefix for the `edifact-o:InvoiceDetails` class and `edifact-o:hasDocumentType` property. I also used the Turtle syntax for RDF lists using parentheses `()`.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Dokumentenname a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:in ( "Commercial invoice" "Credit advice" "Value credit" "Value debit" "Handelsrechnung" "Gutschriftsanzeige" "Wertgutschrift" "Wertbelastung" ) ;
            sh:maxCount 1 ;
            sh:message "Data element 1001 is missing in the BGM segment" ;
            sh:minCount 1 ;
            sh:path edifact-o:hasDocumentType ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #2 ===
The SHACL shape :ExistenzBelegnummer applies to all instances of the class edifact-o:InvoiceDetails, mandating a string value (xsd:string) for the property edifact-o:hasDocumentNumber, with exactly one occurrence, and failing validation with the message "Data element 1004 is missing in the BGM segment" if this constraint is not met.

Here is the converted SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzBelegnummer a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasDocumentNumber ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "Data element 1004 is missing in the BGM segment"
  ] .
```
Note: I assumed a default namespace for the NodeShape (`:`) and a fictional namespace for the `edifact-o` prefix (`http://example.org/edifact-o/`). You may need to adjust these to match your specific use case.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzBelegnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "Data element 1004 is missing in the BGM segment" ;
            sh:minCount 1 ;
            sh:path edifact-o:hasDocumentNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #3 ===
The SHACL shape :LaengeBelegnummer targets all instances of the class edifact-o:InvoiceDetails, enforcing that each has exactly one edifact-o:hasDocumentNumber property with a string value, maximum 12 characters long, and producing the message "The data element 1004 in the BGM segment is too long" if this constraint is violated.

Here is the SHACL shape in Turtle syntax that corresponds to the given natural language description:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:LaengeBelegnummer a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasDocumentNumber ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 12 ;
    sh:message "The data element 1004 in the BGM segment is too long"
  ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeBelegnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 12 ;
            sh:message "The data element 1004 in the BGM segment is too long" ;
            sh:path edifact-o:hasDocumentNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #4 ===
The SHACL shape :Dokumentfunktion applies to all instances of the class edifact-o:InvoiceDetails, specifying a property constraint on edifact-o:hasDocumentFunction that requires exactly one string value (xsd:string), which must be one of the following: "Cancellation", "Replacement", "Duplicate", "Original", "Copy", "Additional transfer", "Stornierung", "Ersatz", "Duplikat", "Kopie", "Zusaetzliche Uebertragung", with a validation failure message "Data element 1225 is missing in the BGM segment, i.e. the specification of the document function" if the property is missing or its value is outside this list.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.edu/edifact-o/>.

:Dokumentfunktion a sh:NodeShape ;
    sh:targetClass edifact-o:InvoiceDetails ;
    sh:property [
        sh:path edifact-o:hasDocumentFunction ;
        sh:datatype xsd:string ;
        sh:in ( "Cancellation" "Replacement" "Duplicate" "Original" "Copy" "Additional transfer" "Stornierung" "Ersatz" "Duplikat" "Kopie" "Zusaetzliche Uebertragung" ) ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "Data element 1225 is missing in the BGM segment, i.e. the specification of the document function" ;
    ].
```

Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Dokumentfunktion a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:in ( "Cancellation" "Replacement" "Duplicate" "Original" "Copy" "Additional transfer" "Stornierung" "Ersatz" "Duplikat" "Original" "Kopie" "Zusaetzliche Uebertragung" ) ;
            sh:maxCount 1 ;
            sh:message "Data element 1225 is missing in the BGM segment, i.e. the specification of the document function" ;
            sh:minCount 1 ;
            sh:path edifact-o:hasDocumentFunction ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #5 ===
The SHACL shape :Belegdatum targets all instances of the class edifact-o:InvoiceDetails, requiring exactly one string value for the property edifact-o:documentDate, and validation will fail with the message "The DTM+137 segment is missing" if the property is missing or appears more than once.

Here is the SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:Belegdatum a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:documentDate ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The DTM+137 segment is missing" ;
  ] .
```

Let me know if you have any questions or if you'd like me to explain any part of the SHACL shape!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Belegdatum a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The DTM+137 segment is missing" ;
            sh:minCount 1 ;
            sh:path edifact-o:documentDate ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #6 ===
The SHACL shape :tatsaechliches_Lieferdatum applies to all instances of the class edifact-o:InvoiceDetails, mandating a single string-valued property p2p-o-inv:actualDeliveryDate, with a failure message "The DTM+35 segment is missing" if this property is absent or duplicated.

Here is the converted SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix p2p-o-inv: <http://example.com/p2p-o-inv/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:tatsaechliches_Lieferdatum a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path p2p-o-inv:actualDeliveryDate ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The DTM+35 segment is missing"
  ] .
```
Let me know if you'd like me to explain any part of this conversion!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-inv: <https://purl.org/p2p-o/invoice#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:tatsaechliches_Lieferdatum a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The DTM+35 segment is missing" ;
            sh:minCount 1 ;
            sh:path p2p-o-inv:actualDeliveryDate ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #7 ===
The SHACL shape :ExistenzAuftragsnummerLieferantKopf applies to all instances of the class edifact-o:InvoiceDetails, requiring exactly one string value for the property edifact-o:orderNumberSupplier, with a validation failure message "The supplier's order number, RFF+VN, is missing from the header" if this property is missing.

Here is the SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:ExistenzAuftragsnummerLieferantKopf
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:orderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The supplier's order number, RFF+VN, is missing from the header" ;
  ] .
```
Note that I assumed `xsd:` prefix for the XML Schema data type `string`, and `http://example.org/edifact-o/` as the namespace for `edifact-o:` prefix. You may need to adjust these according to your actual ontology.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerLieferantKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The supplier's order number, RFF+VN, is missing from the header" ;
            sh:minCount 1 ;
            sh:path edifact-o:orderNumberSupplier ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #8 ===
The SHACL shape :LaengeAuftragsnummerLieferantKopf applies to all instances of the class edifact-o:InvoiceDetails, enforcing a constraint on the required property edifact-o:orderNumberSupplier to have a string value with a maximum length of 35 characters, and returning the message "The order number of the supplier, RFF+VN, in the header is too long" if the constraint is violated.

Here is the SHACL shape in Turtle syntax that corresponds to the natural language description:

```turtle
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerLieferantKopf a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:orderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:maxLength 35 ;
    sh:message "The order number of the supplier, RFF+VN, in the header is too long"
  ] .
```

Let me explain the conversion:

* We define the necessary prefixes for the SHACL vocabulary (`sh:`), RDF (`rdf:`), XML Schema datatypes (`xsd:`), and the example EDIFACT ontology (`edifact-o:`).
* We declare the `:LaengeAuftragsnummerLieferantKopf` NodeShape and specify its `sh:targetClass` as `edifact-o:InvoiceDetails`.
* Inside the NodeShape, we define a single property constraint for `edifact-o:orderNumberSupplier` using a blank node (`[]`).
* Within the property constraint, we specify the `sh:path` as `edifact-o:orderNumberSupplier`, the `sh:datatype` as `xsd:string`, and the `sh:maxCount` and `sh:minCount` as 1, indicating that exactly one value is required.
* We also add a `sh:maxLength` constraint to limit the string value to 35 characters, and a `sh:message` to return a specific error message when the constraint is violated.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerLieferantKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 35 ;
            sh:message "The order number of the supplier, RFF+VN, in the header is too long" ;
            sh:path edifact-o:orderNumberSupplier ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #9 ===
The SHACL shape :ExistenzDatumAuftragsnummerLieferantKopf applies to all instances of the class edifact-o:InvoiceDetails and requires a single string value (xsd:string) for the property edifact-o:dateOrderNumberSupplier, with a validation error message "The date of the supplier's order number, RFF+VN, is missing from the header" if the property is missing or has multiple values.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerLieferantKopf
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:dateOrderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The date of the supplier's order number, RFF+VN, is missing from the header"
  ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerLieferantKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The date of the supplier's order number, RFF+VN, is missing from the header" ;
            sh:minCount 1 ;
            sh:path edifact-o:dateOrderNumberSupplier ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #10 ===
The SHACL shape :LaengeDatumAuftragsnummerLieferantKopf applies to all instances of the class edifact-o:InvoiceDetails, specifying a single property constraint on edifact-o:dateOrderNumberSupplier, requiring its value to be a string (xsd:string) with a maximum length of 8 characters, and producing the validation message "The date of the supplier's order number, RFF+VN, in the header is too long" if this constraint is violated.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerLieferantKopf
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:dateOrderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:maxLength 8 ;
    sh:message "The date of the supplier's order number, RFF+VN, in the header is too long" ;
  ] .
```

This SHACL shape defines a node shape `:LaengeDatumAuftragsnummerLieferantKopf` that targets instances of the class `edifact-o:InvoiceDetails`. It has a single property constraint on the property `edifact-o:dateOrderNumberSupplier`, which requires the value to be a string (`xsd:string`) with a maximum length of 8 characters. If this constraint is violated, the specified validation message will be produced.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerLieferantKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 8 ;
            sh:message "The date of the supplier's order number, RFF+VN, in the header is too long" ;
            sh:path edifact-o:dateOrderNumberSupplier ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #11 ===
The SHACL shape :ExistenzAuftragsnummerKaeuferKopf applies to all instances of the class edifact-o:InvoiceDetails, mandating the presence of exactly one value for the property edifact-o:orderNumberBuyer, which must be a string, with a failure message "The supplier's order number, RFF+ON, is missing from the header" if this constraint is not met.

Here is the SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.org/edifact-o/>.

:ExistenzAuftragsnummerKaeuferKopf
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:orderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The supplier's order number, RFF+ON, is missing from the header"
  ].
```

Let me know if you need any further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerKaeuferKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The supplier's order number, RFF+ON, is missing from the header" ;
            sh:minCount 1 ;
            sh:path edifact-o:orderNumberBuyer ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #12 ===
The SHACL shape :LaengeAuftragsnummerKaeuferKopf targets all instances of the class edifact-o:InvoiceDetails, enforcing a constraint on the property edifact-o:orderNumberBuyer, which must be a string (xsd:string) with exactly one value, having a maximum length of 35 characters"; if this constraint is violated, the validation will produce the message: "The order number of the supplier, RFF+ON, in the header is too long."

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerKaeuferKopf a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:orderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 35 ;
    sh:message "The order number of the supplier, RFF+ON, in the header is too long."
  ] .
```
Let me know if you have any questions or need further adjustments!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerKaeuferKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 35 ;
            sh:message "The order number of the supplier, RFF+ON, in the header is too long" ;
            sh:path edifact-o:orderNumberBuyer ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #13 ===
The SHACL shape :ExistenzDatumAuftragsnummerKaeuferKopf targets all instances of the class edifact-o:InvoiceDetails, specifying a property constraint on edifact-o:dateOrderNumberBuyer, requiring exactly one string value, with a validation error message "The date of the supplier's order number, RFF+ON, is missing from the header" if the property is missing or appears more than once.

Here is the corresponding SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:ExistenzDatumAuftragsnummerKaeuferKopf
    a sh:NodeShape ;
    sh:targetClass edifact-o:InvoiceDetails ;
    sh:property [
        sh:path edifact-o:dateOrderNumberBuyer ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The date of the supplier's order number, RFF+ON, is missing from the header"
    ] .
```

Note: I assume that `xsd:string` is the correct datatype for the property constraint. If you need to use a different datatype, you can replace `xsd:string` with the appropriate datatype IRI.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerKaeuferKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The date of the supplier's order number, RFF+ON, is missing from the header" ;
            sh:minCount 1 ;
            sh:path edifact-o:dateOrderNumberBuyer ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #14 ===
The SHACL shape :LaengeDatumAuftragsnummerKaeuferKopf applies to all instances of the class edifact-o:InvoiceDetails, requiring the property edifact-o:dateOrderNumberBuyer to have exactly one string value (xsd:string) with a maximum length of 8 characters; if this constraint is violated, the validation will produce the message: "The date of the supplier's order number, RFF+ON, in the header is too long."

Here is the conversion of the natural language description into a syntactically valid and semantically correct SHACL shape using Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerKaeuferKopf a sh:NodeShape ;
    sh:targetClass edifact-o:InvoiceDetails ;
    sh:property [
        sh:path edifact-o:dateOrderNumberBuyer ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:maxLength 8 ;
        sh:message "The date of the supplier's order number, RFF+ON, in the header is too long." ;
    ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerKaeuferKopf a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 8 ;
            sh:message "The date of the supplier's order number, RFF+ON, in the header is too long" ;
            sh:path edifact-o:dateOrderNumberBuyer ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #15 ===
The SHACL shape :ExistenzLieferscheinnummer applies to all instances of the class edifact-o:InvoiceDetails, mandating a single string value (xsd:string) for the edifact-o:deliveryNoteNumber property, with a validation error message "The supplier's order number, RFF+DQ, is missing" if this constraint is not met.

Here is the corresponding SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzLieferscheinnummer
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:deliveryNoteNumber ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The supplier's order number, RFF+DQ, is missing" ;
  ] .
```
Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzLieferscheinnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The supplier's order number, RFF+DQ, is missing" ;
            sh:minCount 1 ;
            sh:path edifact-o:deliveryNoteNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #16 ===
The SHACL shape :LaengeLieferscheinnummer targets all instances of the class edifact-o:InvoiceDetails, specifying that each must have exactly one property edifact-o:deliveryNoteNumber with a value that is a string of maximum 35 characters, and if this constraint is violated, the validation will produce the message "The supplier's order number, RFF+DQ, is too long."

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:LaengeLieferscheinnummer a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
      sh:path edifact-o:deliveryNoteNumber ;
      sh:datatype xsd:string ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:maxLength 35 ;
      sh:message "The supplier's order number, RFF+DQ, is too long."
  ] .
```

Note that I assumed `xsd` prefix for the XML Schema data type `xsd:string`. You may need to adjust the prefix according to your actual namespace definition.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeLieferscheinnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 35 ;
            sh:message "The supplier's order number, RFF+DQ, is too long" ;
            sh:path edifact-o:deliveryNoteNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #17 ===
The SHACL shape :ExistenzDatumLieferscheinnummer applies to all instances of the class edifact-o:InvoiceDetails, requiring exactly one string value (xsd:string) for the property edifact-o:dateDeliveryNoteNumber, with a validation error message "The date of the supplier's order number, RFF+DQ, is missing" if it's missing or appears more than once.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumLieferscheinnummer
    a sh:NodeShape ;
    sh:targetClass edifact-o:InvoiceDetails ;
    sh:property [
        sh:path edifact-o:dateDeliveryNoteNumber ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The date of the supplier's order number, RFF+DQ, is missing"
    ] .
```

Note that I assumed `edifact-o` is a prefix for a namespace, and I used `http://example.org/edifact-o/` as its definition. You may need to adjust this to match your actual namespace.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumLieferscheinnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The date of the supplier's order number, RFF+DQ, is missing" ;
            sh:minCount 1 ;
            sh:path edifact-o:dateDeliveryNoteNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #18 ===
The SHACL shape :LaengeDatumLieferscheinnummer targets all instances of the class edifact-o:InvoiceDetails, enforcing a constraint on the property edifact-o:dateDeliveryNoteNumber, which must be a single value (no cardinality constraint specified) with a string datatype and a maximum of 8 characters, producing the validation error message "The date of the supplier's order number, RFF+DQ, is too long" if this constraint is not met.

Here is the converted SHACL shape in Turtle syntax:
```turtle
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:LaengeDatumLieferscheinnummer a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:dateDeliveryNoteNumber ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:maxLength 8 ;
    sh:message "The date of the supplier's order number, RFF+DQ, is too long"
  ] .
```
Please note that I assumed `xsd` prefix is defined elsewhere in the vocabulary, as it is commonly used for XML Schema datatypes. If not, you'll need to add the prefix definition, e.g., `@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .`

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumLieferscheinnummer a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 8 ;
            sh:message "The date of the supplier's order number, RFF+DQ, is too long" ;
            sh:path edifact-o:dateDeliveryNoteNumber ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #19 ===
The SHACL shape :ExistenzKaeufer applies to all instances of edifact-o:E-Invoice, specifying that the p2p-o-inv:hasBuyer property must appear exactly once, and if it's missing or appears more than once, validation will fail with the message "The NAD+BY is missing".

Here is the converted SHACL shape in Turtle syntax:

```turtle
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix p2p-o-inv: <http://example.org/p2p-o-inv/> .

:ExistenzKaeufer a sh:NodeShape ;
  sh:targetClass edifact-o:E-Invoice ;
  sh:property [
    sh:path p2p-o-inv:hasBuyer ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The NAD+BY is missing" ;
  ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-inv: <https://purl.org/p2p-o/invoice#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzKaeufer a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The NAD+BY segment is missing" ;
            sh:minCount 1 ;
            sh:path p2p-o-inv:hasBuyer ] ;
    sh:targetClass edifact-o:E-Invoice .



=== Translation #20 ===
The SHACL shape :UmsatzsteuernummerKaeufer applies to all instances of the class org:FormalOrganization, specifying that if an organization has the RDF type "http://example.com/BuyerRole", then it must have a single p2p-o-org:VATIdentifier property with a string value of up to 14 characters; otherwise, validation will fail with the message "The Segment RFF+VA is missing for the Segment NAD+BY, i.e. the buyer's VAT number is missing".

Here is the SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:UmsatzsteuernummerKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:NodeShape ;
    sh:condition [
      rdf:type <http://example.com/BuyerRole> ;
    ] ;
    sh:constraint [
      sh:path p2p-o-org:VATIdentifier ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:maxLength 14 ;
    ] ;
    sh:message "The Segment RFF+VA is missing for the Segment NAD+BY, i.e. the buyer's VAT number is missing" ;
  ] .
```

Let me know if you'd like me to explain any part of this SHACL shape!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerKaeufer a sh:NodeShape ;
    sh:message "The Segemnt RFF+VA is missing for the Segemnet NAD+BY, i.e. the buyer's VAT number is missing" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:maxCount 1 ;
                sh:maxLength 14 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:VATIdentifier ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #21 ===
The SHACL shape :FormalNameKaeufer applies to all instances of the class org:FormalOrganization, requiring that either the organization is not a "http://example.com/BuyerRole, or it has a p2p-o-org:formalName property with exactly one string literal value (minimum and maximum count of 1) with a maximum length of 35 characters; otherwise, the validation will fail with the error "The data element 3036 is missing for the Segment NAD+BY, i.e. specification of the formal names of the buyer".

Here is the converted SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-org.example/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:FormalNameKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      sh:not [
        sh:path [ sh:in ( <http://example.com/BuyerRole> ) ] ;
      ] ;
      sh:or [
        sh:path p2p-o-org:formalName ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:maxLength 35 ;
      ] ;
    ] ;
    sh:message "The data element 3036 is missing for the Segment NAD+BY, i.e. specification of the formal names of the buyer" ;
  ] .
```

Note that I assumed the prefix `http://example.org/` for the `org:` prefix, and `http://p2p-org.example/` for the `p2p-o-org:` prefix. You may need to adjust these prefixes to match your actual ontology.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:FormalNameKaeufer a sh:NodeShape ;
    sh:message "The data element 3036 is missing for the Segemnet NAD+BY, i.e. specification of the formal names of the buyer" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:formalName ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #22 ===
The SHACL shape :GLNKaeufer applies to all instances of the class org:FormalOrganization, specifying that if an organization is of type "http://example.com/BuyerRole, then it must have exactly one property p2p-o-org:globalLocationNumber with an integer value of exactly 13 characters in length; otherwise, the validation will fail with the message "Data element 3039 is missing for the Segment NAD+BY, i.e. specification of the GLN of the buyer."

Here is the converted SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path p2p-o-org:globalLocationNumber ;
    sh:condition [
      a sh:NodeConstraint ;
      sh:datatype xsd:integer ;
      sh:minLength 13 ;
      sh:maxLength 13 ;
    ] ;
    sh:filterShape [
      a sh:NodeShape ;
      sh:targetNodeKind sh:IRI ;
      sh:property [
        sh:path rdf:type ;
        sh:in ( <http://example.com/BuyerRole> ) ;
      ] ;
    ] ;
    sh:message "Data element 3039 is missing for the Segment NAD+BY, i.e. specification of the GLN of the buyer." ;
  ] .
```

Let me explain the conversion:

* The shape is defined as a `sh:NodeShape` with the name `:GLNKaeufer`.
* The shape targets instances of the class `org:FormalOrganization` using `sh:targetClass`.
* The shape defines a single rule using `sh:rule`.
* The rule specifies the property `p2p-o-org:globalLocationNumber` using `sh:path`.
* The rule has a condition that the property value must be an integer with exactly 13 characters in length, specified using `sh:datatype`, `sh:minLength`, and `sh:maxLength`.
* The rule is only applicable if the instance has a type `http://example.com/BuyerRole`, specified using `sh:filterShape`.
* The filter shape checks for the presence of the type using `sh:property` and `sh:path rdf:type`, and specifies the allowed value using `sh:in`.
* Finally, the shape specifies a validation message using `sh:message`.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNKaeufer a sh:NodeShape ;
    sh:message "Data element 3039 is missing for the Segemnet NAD+BY, i.e. specification of the GLN of the buyer." ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:integer ;
                sh:maxCount 1 ;
                sh:maxLength 13 ;
                sh:minCount 1 ;
                sh:minLength 13 ;
                sh:path p2p-o-org:globalLocationNumber ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #23 ===
The SHACL shape :StadtKaeufer applies to all instances of org:FormalOrganization, specifying that either the organization is not of type "http://example.com/BuyerRole" or, if it is, the property edifact-o:hasCity must be a string with a maximum length of 35 characters and present exactly once, otherwise, the validation will fail with the message "The data element 3164 is missing for the Segment NAD+BY, i.e. specification of the buyer's city".

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/>.
@prefix edifact-o: <http://example.com/edifact-o/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

:StadtKaeufer a sh:NodeShape;
  sh:targetClass org:FormalOrganization;
  sh:rule [
    sh:condition [
      sh:or (
        [ sh:not [ sh:class <http://example.com/BuyerRole> ] ]
        [
          sh:path edifact-o:hasCity;
          sh:datatype xsd:string;
          sh:maxCount 1;
          sh:minCount 1;
          sh:maxLength 35;
        ]
      )
    ];
    sh:message "The data element 3164 is missing for the Segment NAD+BY, i.e. specification of the buyer's city";
  ].
```
Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtKaeufer a sh:NodeShape ;
    sh:message "The data element 3164 is missing for the Segemnet NAD+BY, i.e. specification of the buyer's city" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path edifact-o:hasCity ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #24 ===
The SHACL shape :LandKaeufer applies to all instances of the class org:FormalOrganization, specifying that if an organization has the RDF type "http://example.com/BuyerRole", then the property frapo:hasCountryCode must be present exactly once with a string value of maximum 3 characters. If this condition is not met, the validation will fail with the message: "The data element 3207 is missing for the Segment NAD+BY, i.e. indication of the country of the buyer".

Here is the SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix frapo: <http://example.frapo/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LandKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path (frapo:hasCountryCode) ;
    sh:condition [
      a sh:NodeConstraint ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:maxLength 3 ;
    ] ;
    sh:message "The data element 3207 is missing for the Segment NAD+BY, i.e. indication of the country of the buyer" ;
  ] ;
  sh:scopeClass rdf:type ;
  sh:scopeValue <http://example.com/BuyerRole> .
```
Note that I assumed some prefixes for the namespaces, and used the `frapo:` prefix for the `frapo:hasCountryCode` property. You can adjust these as needed.

Original:
@prefix : <http://mapping.example.com/> .
@prefix frapo: <http://purl.org/cerif/frapo/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LandKaeufer a sh:NodeShape ;
    sh:message "The data element 3207 is missing for the Segemnet NAD+BY, i.e. indication of the country of the buyer" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 3 ;
                sh:minCount 1 ;
                sh:path frapo:hasCountryCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #25 ===
The SHACL shape :StrasseKaeufer applies to all instances of the class org:FormalOrganization, requiring that either the organization is not a buyer (http://example.com/BuyerRole) or, if it is a buyer, then it must have exactly one vcard:hasStreetAddress property with a string value not exceeding 35 characters, otherwise the validation will fail with the message: "The data element 3042 is missing for the Segment NAD+BY, i.e. the buyer's street address."

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl># .

:StrasseKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Rule ;
    sh:condition [
      sh:not [
        sh:path <http://example.com/BuyerRole> ;
      ] ;
    ] ;
    sh:alternative [
      sh:property [
        sh:path vcard:hasStreetAddress ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:maxLength 35 ;
      ] ;
    ] ;
    sh:message "The data element 3042 is missing for the Segment NAD+BY, i.e. the buyer's street address." ;
  ] .
```

This SHACL shape defines a node shape `:StrasseKaeufer` that targets instances of the class `org:FormalOrganization`. The shape specifies a rule with a condition that checks if the organization is not a buyer (i.e., the property `http://example.com/BuyerRole` is not present). If the organization is a buyer, then the alternative constraint applies, which requires the presence of exactly one `vcard:hasStreetAddress` property with a string value not exceeding 35 characters. If the constraint is not satisfied, the specified error message will be returned.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StrasseKaeufer a sh:NodeShape ;
    sh:message "The data element 3042 is missing for the Segemnet NAD+BY, i.e. the buyer's street address." ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path vcard:hasStreetAddress ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #26 ===
The SHACL shape :PLZKaeufer applies to all instances of the class org:FormalOrganization, specifying that if an organization has the RDF type "http://example.com/BuyerRole", then it must have exactly one vcard:postalCode property with a string value no longer than 9 characters; otherwise, validation will fail with the message "The data element 3251 is missing for the Segment NAD+BY, i.e. specification of the buyer's postal code."

Here is the converted SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .

:PLZKaeufer a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path ( vcard:postalCode ) ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxlength 9 ;
    sh:message "The data element 3251 is missing for the Segment NAD+BY, i.e. specification of the buyer's postal code." ;
    sh:condition [
      a sh:SPARQLConstraint ;
      sh:prefixes [
        a rdf:List ;
        rdf:first org: ;
        rdf:rest [ 
          a rdf:List ;
          rdf:first rdfs: ;
          rdf:rest [ 
            a rdf:List ;
            rdf:first rdf: ;
            rdf:rest rdf:nil
          ]
        ]
      ] ;
      sh:return """
        AS ?this
        WHERE {
          ?this a <http://example.com/BuyerRole>
        }
      """ ;
    ]
  ] .
```

Note that I used the `sh:rule` constraint to specify the conditional requirement, and inside it, I used a `sh:SPARQLConstraint` to define the condition. The condition checks if the instance has the type `http://example.com/BuyerRole`. If it does, then the rest of the constraints (datatype, minCount, maxCount, maxlength, and message) are applied.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:PLZKaeufer a sh:NodeShape ;
    sh:message "The data element 3251 is missing for the Segemnet NAD+BY, i.e. specification of the buyer's postal code" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/BuyerRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 9 ;
                sh:minCount 1 ;
                sh:path vcard:postalCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #27 ===
The SHACL shape :ExistenzLieferant applies to all instances of the class edifact-o:E-Invoice, requiring exactly one property p2p-o-inv:hasSupplier, which must occur once and only once; otherwise, validation will fail with the message "The NAD+SU segment is missing".

Here is the SHACL shape in Turtle syntax:

```turtle
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix p2p-o-inv: <http://example.org/p2p-o-inv/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:ExistenzLieferant a sh:NodeShape ;
  sh:targetClass edifact-o:E-Invoice ;
  sh:property [
    sh:path p2p-o-inv:hasSupplier ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The NAD+SU segment is missing" .
  ] .
```

Let me know if you need any further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-inv: <https://purl.org/p2p-o/invoice#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzLieferant a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The NAD+SU segment is missing" ;
            sh:minCount 1 ;
            sh:path p2p-o-inv:hasSupplier ] ;
    sh:targetClass edifact-o:E-Invoice .



=== Translation #28 ===
The SHACL shape :UmsatzsteuernummerLieferant applies to all instances of the class org:FormalOrganization. It specifies a validation rule with an "or" condition: either the organization is not of type "http://example.com/SupplierRole" or, if it is, then it must have exactly one (mandatory) property p2p-o-org:VATIdentifier with a string value of maximum 14 characters. If neither condition is met, validation will fail with the message: "The Segment RFF+VA is missing for the Segment NAD+SU, i.e. Angabe of the VAT number of the supplier".

Here is the converted SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path p2p-o-org:VATIdentifier ;
    sh:datatype xsd:string ;
    sh:maxLength 14 ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:condition [
      sh:class <http://example.com/SupplierRole> ;
    ] ;
    sh:message "The Segment RFF+VA is missing for the Segment NAD+SU, i.e. Angabe of the VAT number of the supplier" ;
  ] ;
  sh:or (
    [
      sh:class [
        sh:noneOf ( <http://example.com/SupplierRole> ) ;
      ] ;
    ]
    [
      sh:property [
        sh:path p2p-o-org:VATIdentifier ;
      ] ;
    ]
  ) .
```

Note that I used `sh:noneOf` to express the "not of type" condition, and `sh:or` to combine the two conditions. I also used a blank node to group the property constraints, as per the requirements. Let me know if this meets your expectations!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerLieferant a sh:NodeShape ;
    sh:message "The Segemnt RFF+VA is missing for the Segemnet NAD+SU, i.e. Angbae of the VAT number of the supplier" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:maxCount 1 ;
                sh:maxLength 14 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:VATIdentifier ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #29 ===
The SHACL shape :FormalNameLieferant applies to all instances of the class org:FormalOrganization, requiring that either the organization is not a supplier (rdf:type "http://example.com/SupplierRole") or, if it is a supplier, the property p2p-o-org:formalName must be present with a single string value (minCount 1, maxCount 1) of up to 35 characters; otherwise, the validation will fail with the message "The data element 3036 is missing for the Segment NAD+SU, i.e. specification of the formal name of the supplier".

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix org: <http://example.com/org/> .
@prefix p2p-o-org: <http://example.com/p2p-o-org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:FormalNameLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path p2p-o-org:formalName ;
    sh:condition [
      sh:not [ sh:path rdf:type ; sh:in ( <http://example.com/SupplierRole> ) ] .
    ] ;
    sh:or [
      sh:not [ sh:path rdf:type ; sh:in ( <http://example.com/SupplierRole> ) ] .
      [
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:maxLength 35 .
      ]
    ] ;
    sh:message "The data element 3036 is missing for the Segment NAD+SU, i.e. specification of the formal name of the supplier" .
  ] .
```
Let me explain the translation:

* The shape is defined as `:FormalNameLieferant`, with the `sh:targetClass` set to `org:FormalOrganization`.
* The shape contains a single rule, represented as a blank node `[]`.
* The rule is a SHACL constraint (`sh:Constraint`) that targets the `p2p-o-org:formalName` property.
* The condition for the constraint is that either the organization is not a supplier (`sh:not` with `rdf:type` and `sh:in` enumeration), or...
* ...if it is a supplier, the `p2p-o-org:formalName` property must have a single string value with a maximum length of 35 characters (`sh:or` with `sh:minCount`, `sh:maxCount`, `sh:datatype`, and `sh:maxLength`).
* If the constraint is not satisfied, the validation will fail with the specified error message (`sh:message`).

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:FormalNameLieferant a sh:NodeShape ;
    sh:message "The data element 3036 is missing for the Segemnet NAD+SU, i.e. specification of the formal name of the supplier" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:formalName ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #30 ===
The SHACL shape :GLNLieferant applies to all instances of the class org:FormalOrganization, requiring that either the organization is not a supplier (i.e., it does not have the RDF type "http://example.com/SupplierRole"), or, if it is a supplier, then it must have exactly one property p2p-o-org:globalLocationNumber with an integer value of exactly 13 characters; if neither condition is met, the validation will fail with the message "The data element 3039 is missing for the Segment NAD+SU, i.e. specification of the GLN of the supplier".

Here is the SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      sh:not [
        rdf:type <http://example.com/SupplierRole>
      ] 
    ] ;
    sh:alternative [
      sh:property [
        sh:path p2p-o-org:globalLocationNumber ;
        sh:datatype xsd:string ;
        sh:length 13 ;
        sh:minCount 1 ;
        sh:maxCount 1
      ]
    ] ;
    sh:message "The data element 3039 is missing for the Segment NAD+SU, i.e. specification of the GLN of the supplier"
  ] .
```
Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNLieferant a sh:NodeShape ;
    sh:message "The data element 3039 is missing for the Segemnet NAD+SU, i.e. specification of the GLN of the supplier" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:integer ;
                sh:maxCount 1 ;
                sh:maxLength 13 ;
                sh:minCount 1 ;
                sh:minLength 13 ;
                sh:path p2p-o-org:globalLocationNumber ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #31 ===
The SHACL shape :StadtLieferant applies to all instances of the class org:FormalOrganization and specifies that if an organization has the RDF type "http://example.com/SupplierRole", then the property edifact-o:hasCity must be present exactly once with a value that is a string with a maximum length of 35 characters; otherwise, the validation will fail with the message "The data element 3164 is missing for the Segment NAD+SU, i.e. specification of the city of the supplier."

Here is the converted SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix edifact-o: <http://example.com/edifact-ontology/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Rule ;
    sh:condition [
      rdf:type <http://example.com/SupplierRole>
    ] ;
    sh:constraint [
      sh:path edifact-o:hasCity ;
      sh:datatype xsd:string ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
      sh:maxLength 35 ;
      sh:message "The data element 3164 is missing for the Segment NAD+SU, i.e. specification of the city of the supplier."
    ]
  ] .
```

This SHACL shape defines a node shape `:StadtLieferant` that applies to instances of the class `org:FormalOrganization`. The shape specifies a rule that checks if the instance has the RDF type `http://example.com/SupplierRole`. If it does, then the property `edifact-o:hasCity` must be present exactly once with a value that is a string with a maximum length of 35 characters. If this condition is not met, the validation will fail with the specified error message.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtLieferant a sh:NodeShape ;
    sh:message "The data element 3164 is missing for the Segemnet NAD+SU, i.e. specification of the city of the supplier" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path edifact-o:hasCity ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #32 ===
The SHACL shape :LandLieferant applies to all instances of the class org:FormalOrganization and specifies that either the organization is not a SupplierRole or it has a single country code (frapo:hasCountryCode) with a string value of maximum 3 characters; otherwise, the validation will fail with "Data element 3207 is missing for the Segment NAD+SU, i.e. specification of the supplier's country".

Here is the SHACL shape in Turtle syntax:
```
prefix org: <http://example.org/>
prefix frapo: <http://frapo.example/>
prefix sh: <http://www.w3.org/ns/shacl#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>

:LandLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path frapo:hasCountryCode ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:maxLength 3 ;
  ] ;
  sh:rule [
    sh:condition [
      sh:not [ sh:hasValue frapo:SupplierRole ] ;
    ] ;
    sh:constraint [
      sh:message "Data element 3207 is missing for the Segment NAD+SU, i.e. specification of the supplier's country" ;
      sh:severity sh:Violation ;
    ] ;
  ] .
```
Note that I assumed the prefix `xsd` is already defined for XML Schema datatypes. If not, you can add `prefix xsd: <http://www.w3.org/2001/XMLSchema#>` to the prefix declarations.

Original:
@prefix : <http://mapping.example.com/> .
@prefix frapo: <http://purl.org/cerif/frapo/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LandLieferant a sh:NodeShape ;
    sh:message "Data element 3207 is missing for the Segemnet NAD+SU, i.e. specification of the supplier's country" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 3 ;
                sh:minCount 1 ;
                sh:path frapo:hasCountryCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #33 ===
The SHACL shape :StrasseLieferant applies to all instances of the class org:FormalOrganization, specifying that if they have the RDF type "http://example.com/SupplierRole", then the property vcard:hasStreetAddress must be present exactly once with a string value no longer than 35 characters; otherwise, the validation will fail with the message "The data element 3042 is missing for the Segment NAD+SU, i.e. specification of the supplier's street".

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:StrasseLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path ( vcard:hasStreetAddress ) ;
    sh:condition [
      a sh:NodeConstraint ;
      sh:datatype xsd:string ;
      sh:maxLength 35 ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
    ] ;
    sh:scopeClass rdf:type ;
    sh:scopeValue <http://example.com/SupplierRole> ;
    sh:message "The data element 3042 is missing for the Segment NAD+SU, i.e. specification of the supplier's street" ;
  ] .
```

Let me explain the translation:

* The shape is defined as a `sh:NodeShape` with the name `:StrasseLieferant`.
* The shape applies to instances of the class `org:FormalOrganization`, specified using `sh:targetClass`.
* The shape has a single rule, which is a `sh:Constraint`.
* The rule specifies a single property constraint on `vcard:hasStreetAddress` using `sh:path`.
* The constraint has several conditions: it must be a string value (`sh:datatype xsd:string`), have a maximum length of 35 characters (`sh:maxLength 35`), and occur exactly once (`sh:minCount 1` and `sh:maxCount 1`).
* The scope of the constraint is specified using `sh:scopeClass` and `sh:scopeValue`, which means that the constraint only applies when the instance has an RDF type of `<http://example.com/SupplierRole>`.
* Finally, a validation message is specified using `sh:message`, which will be displayed if the constraint is not satisfied.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StrasseLieferant a sh:NodeShape ;
    sh:message "The data element 3042 is missing for the Segemnet NAD+SU, i.e. specification of the supplier's street" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path vcard:hasStreetAddress ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #34 ===
The SHACL shape :PLZLieferant applies to all instances of the class org:FormalOrganization, specifying that if an organization has the RDF type "http://example.com/SupplierRole", then the property vcard:postalCode must be present exactly once with a string value of maximum 9 characters; otherwise, validation will fail with the message "The data element 3251 is missing for the Segment NAD+SU, i.e. specification of the supplier's postal code".

Here is the converted SHACL shape in Turtle syntax:

```turtle
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:PLZLieferant a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:property [ sh:path vcard:postalCode ; 
                   sh:datatype xsd:string ;
                   sh:minCount 1 ; 
                   sh:maxCount 1 ;
                   sh:maxLength 9 ;
                 ] ;
    sh:condition [ sh:class <http://example.com/SupplierRole> ] ;
    sh:message "The data element 3251 is missing for the Segment NAD+SU, i.e. specification of the supplier's postal code"
  ] .
```

Note that I assumed the `org:` prefix is for the ontology that defines the `FormalOrganization` class, and `xsd:` prefix is for XML Schema datatypes. Also, I used the `sh:rule` construct to define a conditional constraint, where the condition is that the instance has type `<http://example.com/SupplierRole>`. If this condition holds, then the constraint on `vcard:postalCode` must be satisfied.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:PLZLieferant a sh:NodeShape ;
    sh:message "The data element 3251 is missing for the Segemnet NAD+SU, i.e. specification of the supplier's postal code" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/SupplierRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 9 ;
                sh:minCount 1 ;
                sh:path vcard:postalCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #35 ===
The SHACL shape :ExistenzRechnungsempfaenger applies to all instances of the class edifact-o:E-Invoice, mandating a single occurrence of the property edifact-o:hasInvoicee, with a validation error message "The NAD+IV segment is missing" if this requirement is not met.

Here is the SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:ExistenzRechnungsempfaenger
    a sh:NodeShape ;
    sh:targetClass edifact-o:E-Invoice ;
    sh:property [
        sh:path edifact-o:hasInvoicee ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The NAD+IV segment is missing" ;
    ] .
```
Let me know if you'd like me to explain any part of this conversion!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzRechnungsempfaenger a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The NAD+IV segment is missing" ;
            sh:minCount 1 ;
            sh:path edifact-o:hasInvoicee ] ;
    sh:targetClass edifact-o:E-Invoice .



=== Translation #36 ===
The SHACL shape :UmsatzsteuernummerRechnungsempfaenger applies to all instances of the class org:FormalOrganization, specifying that an organization must either not have the RDF type "http://example.com/InvoiceeRole" or, if it does, must have exactly one p2p-o-org:VATIdentifier property with a string value of up to 14 characters; otherwise, validation will fail with the message "The segment RFF+VA is missing for the segment NAD+IV, i.e. the VAT number of the invoice recipient is missing."

Here is the SHACL shape in Turtle syntax:
```
@prefix org: <http://example.com/org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerRechnungsempfaenger a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path rdf:type ;
    sh:in ( rdf:type <http://example.com/InvoiceeRole> ) ;
    sh:not [
      sh:property [
        sh:path p2p-o-org:VATIdentifier ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:maxLength 14 ;
      ] ;
    ] ;
    sh:message "The segment RFF+VA is missing for the segment NAD+IV, i.e. the VAT number of the invoice recipient is missing." ;
  ] .
```
Let me know if this meets your expectations!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerRechnungsempfaenger a sh:NodeShape ;
    sh:message "The segemnt RFF+VA is missing for the segemnet NAD+IV, i.e. the VAT number of the invoice recipient is missing." ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:maxCount 1 ;
                sh:maxLength 14 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:VATIdentifier ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #37 ===
The SHACL shape :FormalNameRechnungsempfaenger applies to all instances of the class org:FormalOrganization, requiring that if they have the RDF type "http://example.com/InvoiceeRole", then the property p2p-o-org:formalName must be present exactly once with a string value no longer than 35 characters; otherwise, validation will fail with the message "Data element 3036 is missing for Segment NAD+IV, i.e. specification of the formal name of the invoice recipient".

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix org: <http://example.com/org/> .
@prefix p2p-o-org: <http://example.com/p2p-o-org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:FormalNameRechnungsempfaenger a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path p2p-o-org:formalName ;
    sh:condition [
      a sh:ClassConstraint ;
      sh:class rdf:type ;
      sh:class http://example.com/InvoiceeRole ;
    ] ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:maxLength 35 ;
    sh:message "Data element 3036 is missing for Segment NAD+IV, i.e. specification of the formal name of the invoice recipient"
  ] .
```

Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:FormalNameRechnungsempfaenger a sh:NodeShape ;
    sh:message "Data element 3036 is missing for Segemnet NAD+IV, i.e. specification of the formal name of the invoice recipient" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:formalName ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #38 ===
The SHACL shape :GLNRechnungsempfaenger applies to all instances of the class org:FormalOrganization, requiring either the absence of rdf:type "http://example.com/InvoiceeRole" or, if present, a single occurrence (exactly one) of the property p2p-o-org:globalLocationNumber with an integer value of exactly 13 characters in length; otherwise, validation will fail with the message "The data element 3039 is missing for the Segment NAD+IV, i.e. specification of the GLN of the invoice recipient".

Here is the converted SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNRechnungsempfaenger
  a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path rdf:type ;
    sh:in ( rdf:type http://example.com/InvoiceeRole ) ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
  ] ;
  sh:property [
    sh:path p2p-o-org:globalLocationNumber ;
    sh:datatype xsd:integer ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:pattern "^\\d{13}$" ;
    sh:message "The data element 3039 is missing for the Segment NAD+IV, i.e. specification of the GLN of the invoice recipient" ;
  ] .
```
Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNRechnungsempfaenger a sh:NodeShape ;
    sh:message "The data element 3039 is missing for the Segemnet NAD+IV, i.e. specification of the GLN of the invoice recipient" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:integer ;
                sh:maxCount 1 ;
                sh:maxLength 13 ;
                sh:minCount 1 ;
                sh:minLength 13 ;
                sh:path p2p-o-org:globalLocationNumber ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #39 ===
The SHACL shape :StadtRechnungsempfaenger applies to all instances of the class org:FormalOrganization, requiring that either they do not have the RDF type "http://example.com/InvoiceeRole" or, if they do, they must have a single string property edifact-o:hasCity with a maximum length of 35 characters; otherwise, the validation will fail with the message "The data element 3164 is missing for the Segment NAD+IV, i.e. specification of the city of the invoice recipient".

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix edifact-o: <http://edifact.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtRechnungsempfaenger a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    a sh:Constraint ;
    sh:path [ sh:inversePath rdf:type ; sh:datatype rdf:URI ] ;
    sh:filterShape [
      a sh:NodeShape ;
      sh:property [
        sh:path edifact-o:hasCity ;
        sh:datatype xsd:string ;
        sh:maxLength 35 ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
      ] ;
    ] ;
    sh:message "The data element 3164 is missing for the Segment NAD+IV, i.e. specification of the city of the invoice recipient" ;
  ] .
```

Let me explain the conversion:

* `:StadtRechnungsempfaenger` is the NodeShape, which targets instances of `org:FormalOrganization`.
* The `sh:rule` is used to define a constraint that checks for the presence of the `edifact-o:hasCity` property only if the instance has an RDF type of `http://example.com/InvoiceeRole`. This is achieved using `sh:inversePath rdf:type` and `sh:datatype rdf:URI`.
* The `sh:filterShape` defines a nested NodeShape that constrains the `edifact-o:hasCity` property to have a string data type, maximum length of 35 characters, and exactly one occurrence (`sh:minCount 1 ; sh:maxCount 1`).
* The `sh:message` specifies the error message to be returned if the constraint is not met.

Note that I used the `sh:rule` construct to model the conditional constraint, which is a common SHACL pattern. If you're not familiar with `sh:rule`, it's worth exploring the SHACL specification for more information.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtRechnungsempfaenger a sh:NodeShape ;
    sh:message "The data element 3164 is missing for the Segemnet NAD+IV, i.e. specification of the city of the invoice recipient" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path edifact-o:hasCity ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #40 ===
The SHACL shape :LandRechnungsempfaenger applies to all instances of the class org:FormalOrganization. It specifies a validation rule with an sh:or condition. Either the organization does not have the RDF type "http://example.com/InvoiceeRole", or, if it does have this type, the property frapo:hasCountryCode must be present exactly once with a value of a string having a maximum length of 3 characters. If neither of these conditions is met, the validation will fail with the message: "Data element 3207 is missing for Segment NAD+IV, i.e. specification of the country of the invoice recipient".

Here is the SHACL shape in Turtle syntax:

```turtle
@prefix org: <http://org.example/>.
@prefix frapo: <http://frapo.example/>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

:LandRechnungsempfaenger a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path rdf:type ;
    sh:or [
      [ sh:nodeKind sh:Literal ; 
         sh:datatype rdf:type ]
      [ sh:path frapo:hasCountryCode ;
         sh:minCount 1 ;
         sh:maxCount 1 ;
         sh:datatype xsd:string ;
         sh:maxLength 3 ]
    ] ;
    sh:message "Data element 3207 is missing for Segment NAD+IV, i.e. specification of the country of the invoice recipient"
  ] .
```

Note:

* `rdf:type` is used as a path to specify the type of the organization.
* `sh:or` is used to define the disjunction of the two conditions.
* The first condition inside `sh:or` is `sh:nodeKind sh:Literal` which means the organization does not have the RDF type "http://example.com/InvoiceeRole".
* The second condition inside `sh:or` specifies the constraints on the `frapo:hasCountryCode` property.
* The `sh:message` defines the error message to be displayed if the validation fails.

Original:
@prefix : <http://mapping.example.com/> .
@prefix frapo: <http://purl.org/cerif/frapo/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LandRechnungsempfaenger a sh:NodeShape ;
    sh:message "Data element 3207 is missing for Segemnet NAD+IV, i.e. specification of the country of the invoice recipient" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 3 ;
                sh:minCount 1 ;
                sh:path frapo:hasCountryCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #41 ===
Here is the improved translation:

The SHACL shape :StrasseRechnungsempfaenger applies to all instances of the class org:FormalOrganization and specifies a validation rule: an organization must either not have the RDF type "http://example.com/InvoiceeRole" or have exactly one vcard:hasStreet property with a string value of maximum 35 characters; otherwise, the validation fails with the message "Data element 3042 is missing for Segment NAD+IV, specification of the invoice recipient's street address".

Here is the converted SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/>.
@prefix vcard: <http://www.w3.org/2006/vcard/ns#>.
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

:StrasseRechnungsempfaenger a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      sh:not [
        a rdf:type ;
        rdf:value <http://example.com/InvoiceeRole> ;
      ] .
      sh:or [
        sh:property [
          sh:path vcard:hasStreet ;
          sh:datatype xsd:string ;
          sh:minCount 1 ;
          sh:maxCount 1 ;
          sh:maxLength 35 ;
        ] .
      ] .
    ] ;
    sh:message "Data element 3042 is missing for Segment NAD+IV, specification of the invoice recipient's street address" .
  ] .
```
Note:

* I assumed `xsd` prefix is not provided, so it's not included in the prefixes. You may need to add `@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.` if it's not already defined in your Turtle file.
* The SHACL shape `:StrasseRechnungsempfaenger` targets the `org:FormalOrganization` class.
* The validation rule is defined inside a blank node (`[]`) using `sh:rule`.
* The condition is defined using `sh:condition` and `sh:not` to specify that the RDF type "http://example.com/InvoiceeRole" should not be present.
* The `sh:or` clause specifies that if the RDF type is not present, then exactly one `vcard:hasStreet` property with a string value of maximum 35 characters is required.
* The error message is specified using `sh:message`.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StrasseRechnungsempfaenger a sh:NodeShape ;
    sh:message "Data element 3042 is missing for Segemnet NAD+IV, i.e. specification of the invoice recipient's street address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path vcard:hasStreetAddress ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #42 ===
The SHACL shape :PLZRechnungsempfaenger applies to all instances of the class org:FormalOrganization, specifying that if an organization has the RDF type "http://example.com/InvoiceeRole", then it must have exactly one vcard:postalCode property, which must be a string with a maximum length of 9 characters; otherwise, validation will fail with the message "The data element 3251 is missing for the Segment NAD+IV, i.e. specification of the postal code of the invoice recipient".

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:PLZRechnungsempfaenger
    a sh:NodeShape ;
    sh:targetClass org:FormalOrganization ;
    sh:rule [
        a sh:Constraint ;
        sh:condition [
            a sh:NodeConstraint ;
            sh:path rdf:type ;
            sh:in ( <http://example.com/InvoiceeRole> ) ;
        ] ;
        sh:constraint [
            a sh:PropertyConstraint ;
            sh:path vcard:postalCode ;
            sh:datatype xsd:string ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
            sh:maxLength 9 ;
            sh:message "The data element 3251 is missing for the Segment NAD+IV, i.e. specification of the postal code of the invoice recipient" ;
        ] ;
    ] .
```
Let me know if you have any questions or if this shape meets your requirements!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:PLZRechnungsempfaenger a sh:NodeShape ;
    sh:message "The data element 3251 is missing for the Segemnet NAD+IV, i.e. specification of the postal code of the invoice recipient" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/InvoiceeRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 9 ;
                sh:minCount 1 ;
                sh:path vcard:postalCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #43 ===
The SHACL shape :ExistenzLieferanschrift applies to all instances of the class edifact-o:E-Invoice and requires exactly one value for each instance, which must be related to the property edifact-o:hasDeliveryParty, with a validation failure message "The NAD+PR segment is missing" if this property is not provided.

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.org/edifact-o/>.

:ExistenzLieferanschrift a sh:NodeShape ;
  sh:targetClass edifact-o:E-Invoice ;
  sh:property [
    sh:path edifact-o:hasDeliveryParty ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The NAD+PR segment is missing" ;
  ] .
```
Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzLieferanschrift a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The NAD+PR segment is missing" ;
            sh:minCount 1 ;
            sh:path edifact-o:hasDeliveryParty ] ;
    sh:targetClass edifact-o:E-Invoice .



=== Translation #44 ===
Here is an improved version of the natural language sentence:

The SHACL shape :UmsatzsteuernummerLieferanschrift applies to all instances of the class org:FormalOrganization, specifying that either the organization must not be of RDF type "http://example.com/DeliveryPartyRole", or it must have exactly one p2p-o-org:VATIdentifier property with a string value of maximum 14 characters; if neither condition is met, validation fails with the message "The Segment RFF+VA is missing for the Segment NAD+DP, i.e. the VAT number of the delivery address is missing."

Here is the corresponding SHACL shape in Turtle syntax:

```turtle
@prefix org: <http://example.com/org/> .
@prefix p2p-o-org: <http://example.com/p2p-o-org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerLieferanschrift
  a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      sh:not [
        rdf:type <http://example.com/DeliveryPartyRole>
      ] ;
      sh:alternative [
        [ a sh:PropertyShape ;
          sh:path p2p-o-org:VATIdentifier ;
          sh:datatype xsd:string ;
          sh:minCount 1 ;
          sh:maxCount 1 ;
          sh:maxLength 14
        ]
      ]
    ] ;
    sh:message "The Segment RFF+VA is missing for the Segment NAD+DP, i.e. the VAT number of the delivery address is missing."
  ] .
```

Note that I assumed some prefix definitions for `org`, `p2p-o-org`, `rdf`, `sh`, and `xsd` to be able to write the SHACL shape in a readable way. You may need to adjust these prefixes based on your actual RDF data.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:UmsatzsteuernummerLieferanschrift a sh:NodeShape ;
    sh:message "The Segemnt RFF+VA is missing for the Segemnet NAD+DP, i.e. the VAT number of the delivery address is missing." ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:maxCount 1 ;
                sh:maxLength 14 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:VATIdentifier ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #45 ===
The SHACL shape :FormalNameLieferanschrift applies to all instances of the class org:FormalOrganization, requiring that either they do not have the RDF type "http://example.com/DeliveryPartyRole" or, if they do, they must have exactly one string value for the property p2p-o-org:formalName with a maximum length of 35 characters; otherwise, the validation will fail with the message: "The data element 3036 is missing for the Segment NAD+DP, i.e. specification of the formal name of the delivery address".

Here is the SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-o.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:FormalNameLieferanschrift
    a sh:NodeShape ;
    sh:targetClass org:FormalOrganization ;
    sh:rule [
        sh:condition [
            rdf:type http://example.com/DeliveryPartyRole
        ] ;
        sh:result [
            sh:path p2p-o-org:formalName ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:minLength 1 ;
            sh:maxLength 35
        ]
    ] ;
    sh:message "The data element 3036 is missing for the Segment NAD+DP, i.e. specification of the formal name of the delivery address" .
```
Let me know if you have any questions or if you'd like me to clarify any part of the conversion!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:FormalNameLieferanschrift a sh:NodeShape ;
    sh:message "The data element 3036 is missing for the Segemnet NAD+DP, i.e. specification of the formal name of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path p2p-o-org:formalName ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #46 ===
The SHACL shape :GLNLieferanschrift applies to all instances of the class org:FormalOrganization, specifying that either the organization must not have the RDF type "http://example.com/DeliveryPartyRole" or, if it does, it must have exactly one property p2p-o-org:globalLocationNumber with an integer value of exactly 13 digits, failing validation with the message "The data element 3039 is missing for the Segment NAD+DP, i.e. specification of the GLN of the delivery address" if these conditions are not met.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix org: <http://example.org/> .
@prefix p2p-o-org: <http://p2p-org.example/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:GLNLieferanschrift a sh:NodeShape ;
    sh:targetClass org:FormalOrganization ;
    sh:rule [
        sh:condition [
            rdf:type <http://example.com/DeliveryPartyRole> ;
            sh:not [
                sh:path p2p-o-org:globalLocationNumber ;
                sh:datatype xsd:integer ;
                sh:length 13 ;
                sh:minCount 1 ;
                sh:maxCount 1 ;
            ]
        ] ;
        sh:message "The data element 3039 is missing for the Segment NAD+DP, i.e. specification of the GLN of the delivery address" ;
    ] .
```

This shape defines a NodeShape `:GLNLieferanschrift` that applies to instances of class `org:FormalOrganization`. The shape specifies a rule with a condition that either the instance must not have the RDF type `<http://example.com/DeliveryPartyRole>`, or if it does, it must have exactly one property `p2p-o-org:globalLocationNumber` with an integer value of exactly 13 digits. If these conditions are not met, the shape fails validation with the specified error message.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix p2p-o-org: <https://purl.org/p2p-o/organization#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:GLNLieferanschrift a sh:NodeShape ;
    sh:message "The data element 3039 is missing for the Segemnet NAD+DP, i.e. specification of the GLN of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:integer ;
                sh:maxCount 1 ;
                sh:maxLength 13 ;
                sh:minCount 1 ;
                sh:minLength 13 ;
                sh:path p2p-o-org:globalLocationNumber ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #47 ===
The SHACL shape :StadtLieferanschrift applies to all instances of org:FormalOrganization, specifying that an instance either does not have the RDF type "http://example.com/DeliveryPartyRole" or, if it does, it must have a single string-valued property edifact-o:hasCity with a maximum length of 35 characters; if these conditions are not met, the validation will fail with the message "The data element 3164 is missing for the Segment NAD+DP, i.e. specification of the city of the delivery address."

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix edifact-o: <http://example.com/edifact-ontology/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:StadtLieferanschrift a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      rdf:type rdf:Class ;
      rdf:unionOf ( rdf:type http://example.com/DeliveryPartyRole [ 
        sh:property [
          sh:path edifact-o:hasCity ;
          sh:datatype xsd:string ;
          sh:maxLength 35 ;
          sh:minCount 1 ;
          sh:maxCount 1 ;
        ] 
      ] )
    ] ;
    sh:onConstraint [
      sh:message "The data element 3164 is missing for the Segment NAD+DP, i.e. specification of the city of the delivery address." ;
    ]
  ] .
```
Let me know if you need any clarification or modification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StadtLieferanschrift a sh:NodeShape ;
    sh:message "The data element 3164 is missing for the Segemnet NAD+DP, i.e. specification of the city of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path edifact-o:hasCity ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #48 ===
The SHACL shape :LandLieferanschrift applies to all instances of the class org:FormalOrganization, requiring that either the organization does not have the RDF type "http://example.com/DeliveryPartyRole" or, if it does, the property frapo:hasCountryCode must be present exactly once with a string value of exactly 3 characters; otherwise, the validation will fail with the message "Data element 3207 is missing for the Segment NAD+DP, i.e. specification of the country of the delivery address".

Here is the converted SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix frapo: <http://example.com/frapo/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:LandLieferanschrift a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      rdf:type rdf:Property ;
      rdf:value rdf:type ;
      sh:path rdf:type ;
      sh:in (
        <http://example.com/DeliveryPartyRole>
      ) ;
    ] ;
    sh:constraint [
      sh:path frapo:hasCountryCode ;
      sh:datatype xsd:string ;
      sh:length 3 ;
      sh:minCount 1 ;
      sh:maxCount 1 ;
    ] ;
  ] ;
  sh:message "Data element 3207 is missing for the Segment NAD+DP, i.e. specification of the country of the delivery address" .
```
Let me know if you need any further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix frapo: <http://purl.org/cerif/frapo/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LandLieferanschrift a sh:NodeShape ;
    sh:message "Data element 3207 is missing for the Segemnet NAD+DP, i.e. specification of the country of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 3 ;
                sh:minCount 1 ;
                sh:path frapo:hasCountryCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #49 ===
The SHACL shape :StrasseLieferanschrift applies to all instances of the class org:FormalOrganization, specifying that an instance must either not have the RDF type "http://example.com/DeliveryPartyRole" or, if it does, it must have exactly one string value for the property vcard:hasStreetAddress with a length of up to 35 characters; if these conditions are not fulfilled, the validation will fail with the message "The data element 3042 is missing for the Segment NAD+DP, i.e. specification of the street of the delivery address".

Here is the converted SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:StrasseLieferanschrift a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path vcard:hasStreetAddress ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:maxLength 35 ;
    sh:condition [
      sh:path rdf:type ;
      sh:equals <http://example.com/DeliveryPartyRole>
    ] ;
    sh:message "The data element 3042 is missing for the Segment NAD+DP, i.e. specification of the street of the delivery address"
  ] .
```
Note that I assumed the `org:` prefix is for the organization's namespace, and `xsd:` is the standard prefix for XML Schema datatypes. I also used the `rdf:` prefix for the RDF `type` property.

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:StrasseLieferanschrift a sh:NodeShape ;
    sh:message "The data element 3042 is missing for the Segemnet NAD+DP, i.e. specification of the street of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 35 ;
                sh:minCount 1 ;
                sh:path vcard:hasStreetAddress ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #50 ===
The SHACL shape :PLZLieferanschrift applies to all instances of the class org:FormalOrganization, requiring that either the organization is not of type "http://example.com/DeliveryPartyRole" or, if it is, then it must have exactly one vcard:postalCode property with a string value of up to 9 characters; failure to meet this condition will result in the error message "The data element 3251 is missing for the Segment NAD+DP, i.e. specification of the postal code of the delivery address."

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix org: <http://example.org/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:PLZLieferanschrift a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:rule [
    sh:condition [
      sh:not [
        sh:hasValue http://example.com/DeliveryPartyRole ;
      ] ;
    ] ;
    sh:alternative [
      sh:property [
        sh:path vcard:postalCode ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:minLength 1 ;
        sh:maxLength 9 ;
      ] ;
    ] ;
    sh:message "The data element 3251 is missing for the Segment NAD+DP, i.e. specification of the postal code of the delivery address."
  ] .
```
Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:PLZLieferanschrift a sh:NodeShape ;
    sh:message "The data element 3251 is missing for the Segemnet NAD+DP, i.e. specification of the postal code of the delivery address" ;
    sh:or ( [ sh:not [ a sh:PropertyShape ;
                        sh:hasValue "http://example.com/DeliveryPartyRole" ;
                        sh:path rdf:type ] ] [ sh:datatype xsd:string ;
                sh:maxCount 1 ;
                sh:maxLength 9 ;
                sh:minCount 1 ;
                sh:path vcard:postalCode ] ) ;
    sh:targetClass org:FormalOrganization .



=== Translation #51 ===
The SHACL shape :Waehrung applies to all instances of the class edifact-o:InvoiceDetails, requiring exactly one string value (xsd:string) for the property schema1:currency, with a validation error message "The CUX segment in the invoice header is missing" if this property is missing or has an incorrect cardinality.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix schema1: <http://schema1.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Waehrung a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path schema1:currency ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The CUX segment in the invoice header is missing" ;
  ] .
```

Let me know if you have any questions or need further explanations!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix schema1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Waehrung a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The CUX segment in the invoice header is missing" ;
            sh:minCount 1 ;
            sh:path schema1:currency ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #52 ===
The SHACL shape :EANAtrikelnummer applies to all instances of the class edifact-o:item, specifying that exactly one of the following conditions must be met: either the property edifact-o:hasProductIdentification must have a value "International Article Number" with a minimum count of 1, or the property edifact-o:itemNumberSupplier must have a minimum count of 1, both with a string value (xsd:string); otherwise, the validation will fail with the message "The LIN segment with the value EN in data element 7143 is missing, i.e. the specification of the EAN article number or the PIA segment with the value SA in data element 7143 is missing, i.e. the specification of the supplier's article number."

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:EANAtrikelnummer a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:rule [
    sh:alternative [
      [ sh:path edifact-o:hasProductIdentification ;
         sh:datatype xsd:string ;
         sh:in ( "International Article Number" ) ;
         sh:minCount 1 ;
       ] ,
      [ sh:path edifact-o:itemNumberSupplier ;
         sh:datatype xsd:string ;
         sh:minCount 1 ;
       ]
    ] ;
    sh:message "The LIN segment with the value EN in data element 7143 is missing, i.e. the specification of the EAN article number or the PIA segment with the value SA in data element 7143 is missing, i.e. the specification of the supplier's article number." ;
  ] .
```
Note that I assumed the `edifact-o:` prefix is bound to `http://example.org/edifact-o/`, which is a fictional namespace. You should replace this with the actual namespace used in your data.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:EANAtrikelnummer a sh:NodeShape ;
    sh:message "The LIN segment with the value EN in data element 7143 is missing, i.e. the specification of the EAN article number or the PIA segment with the value SA in data element 7143 is missing, i.e. the specification of the supplier's article number." ;
    sh:or ( [ sh:datatype xsd:string ;
                sh:hasValue "International Article Number" ;
                sh:minCount 1 ;
                sh:path edifact-o:hasProductIdentification ] [ sh:datatype xsd:string ;
                sh:minCount 1 ;
                sh:path edifact-o:itemNumberSupplier ] ) ;
    sh:targetClass edifact-o:item .



=== Translation #53 ===
The SHACL shape :BerechneteMenge applies to all instances of edifact-o:item and requires exactly one edifact-o:deliveredQuantity, which must be a float value with a length of up to 15 characters. If this property is missing or appears more than once, validation will fail with the message "The segment QTY+12 is missing, i.e. the specification of the calculated quantity."

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .

:BerechneteMenge a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:deliveredQuantity ;
    sh:datatype xsd:float ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:message "The segment QTY+12 is missing, i.e. the specification of the calculated quantity." ;
    sh:maxLength 15
  ] .
```

Let me know if this meets your requirements!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BerechneteMenge a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:maxLength 15 ;
            sh:message "The segment QTY+12 is missing, i.e. the specification of the calculated quantity." ;
            sh:minCount 1 ;
            sh:path edifact-o:deliveredQuantity ] ;
    sh:targetClass edifact-o:item .



=== Translation #54 ===
Here is a improved translation:

The SHACL shape :BerechneteMenge applies to all instances of the class edifact-o:item and requires exactly one value for the property p2p-o-doc-line:invoicedQuantity, which must be a floating-point number with a maximum length of 15 characters; if this property is missing or appears more than once, validation will fail with the message "The segment QTY+47 is missing, i.e. the specification of the calculated quantity."

Here is the SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix p2p-o-doc-line: <http://example.com/p2p-o-doc-line/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BerechneteMenge a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path p2p-o-doc-line:invoicedQuantity ;
    sh:datatype xsd:float ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 15 ;
    sh:message "The segment QTY+47 is missing, i.e. the specification of the calculated quantity."
  ] .
```

Note that I assumed that the prefixes `edifact-o:` and `p2p-o-doc-line:` are used to abbreviate some URLs, and I used `xsd:float` to represent the floating-point number data type.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-doc-line: <https://purl.org/p2p-o/documentline#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BerechneteMenge a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:maxLength 15 ;
            sh:message "The segment QTY+47 is missing, i.e. the specification of the calculated quantity." ;
            sh:minCount 1 ;
            sh:path p2p-o-doc-line:invoicedQuantity ] ;
    sh:targetClass edifact-o:item .



=== Translation #55 ===
The SHACL shape :BerechneteMenge applies to all instances of edifact-o:item, specifying a mandatory property edifact-o:hasLineItemAmount, which must have exactly one occurrence, with a value that is a floating-point number not exceeding 14 characters in length, and will trigger a validation error with the message "The segment MOA+203 is missing, i.e. the indication of the net position price" if not met.

Here is the SHACL shape in Turtle syntax that corresponds to the given natural language description:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BerechneteMenge a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasLineItemAmount ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:float ;
    sh:pattern "^(?=.{1,14}$)" ;
    sh:message "The segment MOA+203 is missing, i.e. the indication of the net position price" ;
  ] .
```

Note that I assumed `edifact-o:` and `xsd:` are the prefixes for the respective namespaces. You may need to adjust them according to your actual namespace definitions. Also, I used a regular expression pattern to enforce the maximum length of 14 characters for the floating-point number value.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BerechneteMenge a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:maxLength 14 ;
            sh:message "The segment MOA+203 is missing, i.e. the indication of the net position price." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasLineItemAmount ] ;
    sh:targetClass edifact-o:item .



=== Translation #56 ===
The SHACL shape :ArtikelNettopreis applies to all instances of the class edifact-o:item, requiring exactly one value (minCount 1, maxCount 1) for the property edifact-o:hasNetpriceOfItem, which must be a floating-point number (xsd:float), and will trigger a validation error with the message "The PRI+AAA segment is missing, i.e. the indication of the net price of an individual article" if this constraint is not met.

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ArtikelNettopreis a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasNetpriceOfItem ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:float ;
    sh:message "The PRI+AAA segment is missing, i.e. the indication of the net price of an individual article"
  ] .
```
Let me know if you have any questions or if you'd like me to explain any of the choices I made!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ArtikelNettopreis a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:maxLength 13 ;
            sh:message "The PRI+AAA segment is missing, i.e. the indication of the net price of an individual article." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasNetpriceOfItem ] ;
    sh:targetClass edifact-o:item .



=== Translation #57 ===
The SHACL shape :ArtikelBruttopreis applies to all instances of the class edifact-o:item, requiring exactly one value of type float (xsd:float) for the property edifact-o:hasGrosspriceOfItem, with a maximum length of 13 characters, and validation will fail with the message "The PRI+AAB segment is missing, i.e. the indication of the net price of an individual article" if this constraint is not met.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ArtikelBruttopreis a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasGrosspriceOfItem ;
    sh:datatype xsd:float ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 13 ;
    sh:message "The PRI+AAB segment is missing, i.e. the indication of the net price of an individual article" ;
  ] .
```

Let me know if this meets your expectations!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ArtikelBruttopreis a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 1 ;
            sh:maxLength 13 ;
            sh:message "The PRI+AAB segment is missing, i.e. the indication of the net price of an individual article." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasGrosspriceOfItem ] ;
    sh:targetClass edifact-o:item .



=== Translation #58 ===
The SHACL shape :ExistenzAuftragsnummerLieferant specifies a property constraint on edifact-o:orderNumberSupplier, requiring exactly one value, and validation will fail with the message "The order number of the supplier, RFF+VN, is missing." if it is missing.

Here is the conversion of the natural language description into a syntactically valid and semantically correct SHACL shape using Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:ExistenzAuftragsnummerLieferant a sh:NodeShape ;
  sh:targetClass edifact-o:Order ;
  sh:property [
    sh:path edifact-o:orderNumberSupplier ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The order number of the supplier, RFF+VN, is missing." ;
  ] .
```

Let me explain the conversion:

* We define the prefixes `sh:` and `edifact-o:` using `@prefix`.
* We create a NodeShape `:ExistenzAuftragsnummerLieferant` with `a sh:NodeShape`.
* We specify the target class `edifact-o:Order` using `sh:targetClass`.
* We define a property constraint using a blank node `[]` with `sh:property`.
* Inside the blank node, we specify the path `edifact-o:orderNumberSupplier` using `sh:path`.
* We set the minimum and maximum count to 1 using `sh:minCount` and `sh:maxCount`, respectively, to require exactly one value.
* We specify the error message using `sh:message`.

Note that I assumed the namespace `http://example.org/edifact-o/` for the `edifact-o:` prefix, as it is not explicitly defined in the problem statement. Replace it with the actual namespace if needed.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerLieferant a sh:Shape ;
    sh:constraint [ sh:message "The order number of the supplier, RFF+VN, is missing." ;
            sh:minCount 1 ;
            sh:path edifact-o:orderNumberSupplier ] .



=== Translation #59 ===
The SHACL shape :ExistenzAuftragsnummerLieferantArtikel applies to all instances of the class edifact-o:item, mandating a single string value (xsd:string) for the property edifact-o:orderNumberSupplier, with a validation failure message "The order number of the supplier, RFF+VN, is missing in the item part." if this requirement is not met.

Here is the converted SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerLieferantArtikel
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:orderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The order number of the supplier, RFF+VN, is missing in the item part."
  ] .
```
Note that I assumed the prefix `edifact-o:` is bound to `http://example.com/edifact-o/`, you should adjust this according to your actual ontology.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerLieferantArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The order number of the supplier, RFF+VN, is missing in the item part." ;
            sh:minCount 1 ;
            sh:path edifact-o:orderNumberSupplier ] ;
    sh:targetClass edifact-o:item .



=== Translation #60 ===
The SHACL shape :LaengeAuftragsnummerLieferantArtikel applies to all instances of edifact-o:item, enforcing that the value of edifact-o:orderNumberSupplier is a string with a maximum length of 35 characters) and producing the message "The order number of the supplier, RFF+VN, in the item part is too long." if this constraint is violated.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:LaengeAuftragsnummerLieferantArtikel a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:orderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:maxLength 35 ;
    sh:message "The order number of the supplier, RFF+VN, in the item part is too long."
  ] .
```

Note that I assumed `xsd` prefix for the `xsd:string` datatype, if your ontology uses a different prefix for XML Schema datatypes, you should adjust accordingly.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerLieferantArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 35 ;
            sh:message "The order number of the supplier, RFF+VN, in the item part is too long." ;
            sh:path edifact-o:orderNumberSupplier ] ;
    sh:targetClass edifact-o:item .



=== Translation #61 ===
The SHACL shape :ExistenzDatumAuftragsnummerLieferantArtikel applies to all instances of the class edifact-o:item, requiring exactly one string value for the property edifact-o:dateOrderNumberSupplier, with a failure message "The date of the supplier's order number, RFF+VN, is missing in the item part." if the property is missing.

Here is the SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:ExistenzDatumAuftragsnummerLieferantArtikel a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:dateOrderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The date of the supplier's order number, RFF+VN, is missing in the item part."
  ] .
```

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerLieferantArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The date of the supplier's order number, RFF+VN, is missing in the item part." ;
            sh:minCount 1 ;
            sh:path edifact-o:dateOrderNumberSupplier ] ;
    sh:targetClass edifact-o:item .



=== Translation #62 ===
The SHACL shape :LaengeDatumAuftragsnummerLieferantArtikel applies to all instances of the class edifact-o:item, requiring the property edifact-o:dateOrderNumberSupplier to have exactly one value that is a string with a maximum length of 8 characters), and will produce the validation message "The date of the supplier's order number, RFF+VN, in the item section must be long enough" if this constraint is not met.

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.com/edifact-o/>.

:LaengeDatumAuftragsnummerLieferantArtikel
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:dateOrderNumberSupplier ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 8 ;
    sh:message "The date of the supplier's order number, RFF+VN, in the item section must be long enough"
  ] .
```
Note that I assumed `xsd:` prefix for the XML Schema Datatype `string`, and `http://example.com/edifact-o/` as the prefix for the `edifact-o` namespace. You may need to adjust these prefixes to match your specific use case.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerLieferantArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 8 ;
            sh:message "The date of the supplier's order number, RFF+VN, in the item section must be long enough." ;
            sh:path edifact-o:dateOrderNumberSupplier ] ;
    sh:targetClass edifact-o:item .



=== Translation #63 ===
The SHACL shape :ExistenzAuftragsnummerKaeuferArtikel applies to all instances of the class edifact-o:item, specifying that exactly one string value (xsd:string) is required for the property edifact-o:orderNumberBuyer, with a validation error message "The order number of the supplier, RFF+ON, is missing in the item part." if this property is missing.

Here is the SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerKaeuferArtikel
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:orderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The order number of the supplier, RFF+ON, is missing in the item part."
  ] .
```

Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzAuftragsnummerKaeuferArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The order number of the supplier, RFF+ON, is missing in the item part." ;
            sh:minCount 1 ;
            sh:path edifact-o:orderNumberBuyer ] ;
    sh:targetClass edifact-o:item .



=== Translation #64 ===
The SHACL shape :LaengeAuftragsnummerKaeuferArtikel applies to all instances of the class edifact-o:item, enforcing a constraint on the property edifact-o:orderNumberBuyer, which must have exactly one value that is a string (xsd:string) with a maximum length of 35 characters, and will produce the validation message "The order number of the supplier, RFF+ON, in the item part is too long" if this constraint is violated.

Here is the SHACL shape in Turtle syntax that corresponds to the given natural language description:

```
@prefix sh:  <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerKaeuferArtikel 
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:orderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 35 ;
    sh:message "The order number of the supplier, RFF+ON, in the item part is too long" ;
  ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeAuftragsnummerKaeuferArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 35 ;
            sh:message "The order number of the supplier, RFF+ON, in the item part is too long." ;
            sh:path edifact-o:orderNumberBuyer ] ;
    sh:targetClass edifact-o:item .



=== Translation #65 ===
The SHACL shape :ExistenzDatumAuftragsnummerKaeuferArtikel applies to all instances of the class edifact-o:item, requiring a single string value (xsd:string) for the edifact-o:dateOrderNumberBuyer property, with a validation failure message "The date of the supplier's order number, RFF+ON, is missing in the item part" if the value is missing or appears more than once.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerKaeuferArtikel
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:dateOrderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The date of the supplier's order number, RFF+ON, is missing in the item part"
  ] .
```

Note that I assumed `edifact-o:` is a prefix for the namespace `http://example.org/edifact-o/`, which you may need to adjust according to your actual namespace.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ExistenzDatumAuftragsnummerKaeuferArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:message "The date of the supplier's order number, RFF+ON, is missing in the item part." ;
            sh:minCount 1 ;
            sh:path edifact-o:dateOrderNumberBuyer ] ;
    sh:targetClass edifact-o:item .



=== Translation #66 ===
The SHACL shape :LaengeDatumAuftragsnummerKaeuferArtikel applies to all instances of the class edifact-o:item, enforcing a constraint on the single valued property edifact-o:dateOrderNumberBuyer, which must have a string value (xsd:string) with a maximum length of 8 characters; if this constraint is violated, the validation will produce the message: "The date of the supplier's order number, RFF+ON, in the item part is too long."

Here is the SHACL shape in Turtle syntax:
```
@prefix edifact-o: <https://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerKaeuferArtikel a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:dateOrderNumberBuyer ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:maxLength 8 ;
    sh:message "The date of the supplier's order number, RFF+ON, in the item part is too long."
  ] .
```
Let me know if you need any further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:LaengeDatumAuftragsnummerKaeuferArtikel a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxLength 8 ;
            sh:message "The date of the supplier's order number, RFF+ON, in the item part is too long." ;
            sh:path edifact-o:dateOrderNumberBuyer ] ;
    sh:targetClass edifact-o:item .



=== Translation #67 ===
The SHACL shape :Rechnungsbetrag applies to all instances of the class edifact-o:InvoiceDetails, requiring a single value (exactly one) for the property edifact-o:hasInvoiceAmount, which must be a string with a maximum length of 14 characters, and will result in a validation error with the message "The segment MOA+77 is missing, i.e. the invoice amount is missing" if this constraint is not met.

Here is the converted SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-ontology/> .

:Rechnungsbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasInvoiceAmount ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:maxLength 14 ;
    sh:message "The segment MOA+77 is missing, i.e. the invoice amount is missing"
  ] .
```
Note that I assumed the `xsd:` prefix for the XML Schema datatypes, which is a common convention. If you need to use a different prefix or namespace, just let me know!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Rechnungsbetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:maxLength 14 ;
            sh:message "The segment MOA+77 is missing, i.e. the invoice amount is missing." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasInvoiceAmount ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #68 ===
The SHACL shape :Gesamtpositionsbetrag applies to all instances of the class edifact-o:InvoiceDetails, requiring exactly one value (minCount 1, maxCount 1) for the property edifact-o:hasTotalLineItemAmount, with a validation error message "The segment MOA+79 is missing, i.e. the indication of the total position amount" if this constraint is not met.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:Gesamtpositionsbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasTotalLineItemAmount ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The segment MOA+79 is missing, i.e. the indication of the total position amount"
  ] .
```

Let me know if you need any further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Gesamtpositionsbetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The segment MOA+79 is missing, i.e. the indication of the total position amount." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasTotalLineItemAmount ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #69 ===
The SHACL shape :SummeZuAbschlaege applies to all instances of the class edifact-o:InvoiceDetails, requiring exactly one edifact-o:hasTotalAdditionsAndDeductions property, with a minimum and maximum count of 1, and throwing an error with the message "The segment MOA+131 is missing, i.e. the indication of the sums of the additions/deductions" if the property is missing or appears more than once.

Here is the converted SHACL shape in Turtle syntax:

```turtle
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:SummeZuAbschlaege
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasTotalAdditionsAndDeductions ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The segment MOA+131 is missing, i.e. the indication of the sums of the additions/deductions" ;
  ] .
```

Note that I used the namespace `http://example.org/edifact-o/` for the `edifact-o:` prefix, assuming it's a fictional namespace. You may need to replace it with the actual namespace used in your RDF data.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:SummeZuAbschlaege a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The segment MOA+131 is missing, i.e. the indication of the sums of the additions/deductions." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasTotalAdditionsAndDeductions ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #70 ===
The SHACL shape :SteuerpflichtigerBetrag applies to all instances of the class edifact-o:InvoiceDetails, mandating one and only one value for the property edifact-o:hasTaxableAmount, with a failure message "The segment MOA+125 is missing, i.e. the indication of the taxable amount" if this constraint is not met.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:SteuerpflichtigerBetrag a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasTaxableAmount ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The segment MOA+125 is missing, i.e. the indication of the taxable amount"
  ] .
```

Note that I assumed `http://example.org/edifact-o/` as the namespace for `edifact-o:` prefix, you should replace it with the actual namespace used in your RDF data.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:SteuerpflichtigerBetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:message "The segment MOA+125 is missing, i.e. the indication of the taxable amount." ;
            sh:minCount 1 ;
            sh:path edifact-o:hasTaxableAmount ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #71 ===
The SHACL shape :zusaetzlichePartneridentifikation applies to all instances of the class org:FormalOrganization, requiring a single value (cardinality of 1) for the property edifact-o:additionalPartnerIdentificationEANCode, which must be a string with a maximum length of 35 characters, and failure to meet these constraints will result in the error message "The RFF+API segment is incorrect, i.e. the specification of the additional partner identification."

Here is the SHACL shape in Turtle syntax that corresponds to the natural language description:

```
@prefix org: <http://example.org/> .
@prefix edifact-o: <http://edifact.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:zusaetzlichePartneridentifikation a sh:NodeShape ;
  sh:targetClass org:FormalOrganization ;
  sh:property [
    sh:path edifact-o:additionalPartnerIdentificationEANCode ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 35 ;
    sh:message "The RFF+API segment is incorrect, i.e. the specification of the additional partner identification."
  ] .
```

Let me know if you have any questions or need further clarification!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:zusaetzlichePartneridentifikation a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:maxLength 35 ;
            sh:message "The RFF+API segment is incorrect, i.e. the specification of the additional partner identification." ;
            sh:path edifact-o:additionalPartnerIdentificationEANCode ] ;
    sh:targetClass org:FormalOrganization .



=== Translation #72 ===
The SHACL shape :Zahlungsbedingung applies to all instances of edifact-o:InvoiceDetails, requiring edifact-o:paymentCondition to be a string (xsd:string) selected from "As usual", "Extended", "Wie ueblich", "Verlaengert", allowing up to 5 occurrences, and validating with the message "The specified payment term is not one of the expected values, i.e. data element 4279 in the PAT segment is not equal to 1 or 7" if the value is not in the list.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Zahlungsbedingung a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:paymentCondition ;
    sh:datatype xsd:string ;
    sh:in ( "As usual" "Extended" "Wie ueblich" "Verlaengert" ) ;
    sh:minCount 1 ;
    sh:maxCount 5 ;
    sh:message "The specified payment term is not one of the expected values, i.e. data element 4279 in the PAT segment is not equal to 1 or 7" ;
  ] .
```

Let me know if this meets your requirements!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Zahlungsbedingung a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:in ( "As usual" "Extended" "Wie ueblich" "Verlaengert" ) ;
            sh:maxCount 5 ;
            sh:message "The specified payment term is not one of the expected values, i.e. data element 4279 in the PAT segment is not equal to 1 or 7." ;
            sh:path edifact-o:paymentCondition ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #73 ===
The SHACL shape applies to all instances of the class edifact-o:InvoiceDetails, enforcing a constraint on the property edifact-o:valutaDate, which must be a string (xsd:string) with a maximum length of 8 characters, appearing exactly once, and producing the error message "The specified value date is too long, i.e. the DTM+209" if this constraint is violated.

Here is the corresponding SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:InvoiceDetailsShape
  a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:valutaDate ;
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:maxLength 8 ;
    sh:message "The specified value date is too long, i.e. the DTM+209" ;
  ] .
```
Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ValutaDatum a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:maxLength 8 ;
            sh:message "The specified value date is too long, i.e. the DTM+209." ;
            sh:path edifact-o:valutaDate ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #74 ===
The SHACL shape :Abschlag applies to all instances of the class edifact-o:item, specifying that the property edifact-o:hasAllowanceReason with at least one string value (minimum length of 1 character) and a maximum of 15 values; if this property is missing or its value does not meet these constraints, validation will produce the message: "The data element 7160 or 7161 is missing in the ALC segment, i.e. the fee type specification."

Here is the SHACL shape in Turtle syntax that corresponds to the given natural language description:

```turtle
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.org/edifact-o/>.

:Abschlag a sh:NodeShape;
  sh:targetClass edifact-o:item;
  sh:property [
    sh:path edifact-o:hasAllowanceReason;
    sh:datatype xsd:string;
    sh:minCount 1;
    sh:maxCount 15;
    sh:minLength 1;
    sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the fee type specification."
  ].
```

Note that I've used the `xsd:string` datatype, assuming that's the correct datatype for the values of `edifact-o:hasAllowanceReason`. If that's not the case, you can adjust the datatype accordingly. Also, I've used the `sh:minLength` constraint to specify the minimum length of 1 character, as per the natural language description.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Abschlag a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 15 ;
            sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the tee type specification." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasAllowanceReason ] ;
    sh:targetClass edifact-o:item .



=== Translation #75 ===
The SHACL shape :Rabatt targets all instances of the class edifact-o:item, specifying that it must have exactly 1 to 15 occurrences of the edifact-o:hasDiscountReason property, with each value being a string of at least one character; if this property is missing, appears more than 15, has an invalid value, or doesn't meet these constraints, validation will fail with the message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the tee type specification."

Here is the converted SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:Rabatt a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasDiscountReason ;
    sh:minCount 1 ;
    sh:maxCount 15 ;
    sh:datatype xsd:string ;
    sh:minLength 1 ;
    sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the tee type specification."
  ] .
```

Note:

* I assumed `xsd:string` as the datatype for the `edifact-o:hasDiscountReason` property, which is a common choice for string values. If you need a different datatype, please let me know.
* I used `sh:minLength 1` to ensure that the string value has at least one character, as specified in the NL description.
* The `sh:message` constraint is attached to the property constraint, which means that this message will be displayed if any of the constraints on this property fail.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Rabatt a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 15 ;
            sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the tee type specification." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasDiscountReason ] ;
    sh:targetClass edifact-o:item .



=== Translation #76 ===
The SHACL shape :Zuschlag applies to all instances of the class edifact-o:item, enforcing that the property edifact-o:hasChargeReason must have a value with a minimum length of 1 character, and it must occur at most 15 times; if the property is invalid or missing, validation will fail with the error message: "The data element 7160 or 7161 is missing in the ALC segment, i.e. the specification surcharge type."

Here is the converted SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .

:Zuschlag a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasChargeReason ;
    sh:datatype xsd:string ;
    sh:minLength 1 ;
    sh:maxCount 15 ;
    sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the specification surcharge type."
  ] .
```
Note:

* I assumed the prefix `xsd:` for the XML Schema data type `string`.
* I used the `sh:minLength` constraint to specify the minimum length of 1 character for the `edifact-o:hasChargeReason` property.
* I used the `sh:maxCount` constraint to specify that the `edifact-o:hasChargeReason` property can occur at most 15 times.
* I placed the property constraints inside a blank node `[]` as per the requirements.
* I added the `sh:targetClass` to specify that the shape applies to instances of the class `edifact-o:item`.

Let me know if this meets your requirements!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Zuschlag a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:maxCount 15 ;
            sh:message "The data element 7160 or 7161 is missing in the ALC segment, i.e. the specification surcharge type." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasChargeReason ] ;
    sh:targetClass edifact-o:item .



=== Translation #77 ===
The SHACL shape :AbschlagProzentsatz applies to all instances of the class edifact-o:item, specifying that the property edifact-o:hasAllowancePercentage must have a value that is a float, between 1 and 5 characters, and can appear at most 15 times; if the property is missing or its value is invalid, the message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount." will be reported.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.org/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:AbschlagProzentsatz a sh:NodeShape ;
    sh:targetClass edifact-o:item ;
    sh:property [
        sh:path edifact-o:hasAllowancePercentage ;
        sh:datatype xsd:float ;
        sh:minLength 1 ;
        sh:maxLength 5 ;
        sh:maxCount 15 ;
        sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount." ;
    ] .
```

Note that I assumed `http://example.org/edifact-o/` as the prefix for the `edifact-o:` namespace, but you may need to adjust this to match your actual namespace.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:AbschlagProzentsatz a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 15 ;
            sh:maxLength 5 ;
            sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasAllowancePercentage ] ;
    sh:targetClass edifact-o:item .



=== Translation #78 ===
The SHACL shape :RabattProzentsatz applies to all instances of the class edifact-o:item, specifying a property constraint that must have a minimum of one and a maximum of 15 on edifact-o:hasDiscountPercentage, with a value that is a float between 1 and 5 characters in length; if this property is missing or its value is outside these constraints, validation will produce the message: "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount."

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:RabattProzentsatz a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasDiscountPercentage ;
    sh:datatype xsd:float ;
    sh:minCount 1 ;
    sh:maxCount 15 ;
    sh:minLength 1 ;
    sh:maxLength 5 ;
    sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount." ;
  ] .
```

Note that I assumed the prefix `edifact-o` is bound to `http://example.com/edifact-o/`, which you may need to adjust based on your actual dataset.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:RabattProzentsatz a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 15 ;
            sh:maxLength 5 ;
            sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the discount." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasDiscountPercentage ] ;
    sh:targetClass edifact-o:item .



=== Translation #79 ===
The SHACL shape :ZuschlagProzentsatz applies to all instances of the class edifact-o:item, requiring a property edifact-o:hasChargePercentage with a float value, minimum length of 1 character, maximum length of 5, and a maximum occurrence of 15 times, with a validation failure message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the surcharge" if any of these constraints are not met.

Here is the converted SHACL shape in Turtle syntax:

```turtle
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ZuschlagProzentsatz a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasChargePercentage ;
    sh:datatype xsd:float ;
    sh:minLength 1 ;
    sh:maxLength 5 ;
    sh:minCount 1 ;
    sh:maxCount 15 ;
    sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the surcharge"
  ] .
```

Note that I assumed the prefix `edifact-o:` is bound to the namespace `http://example.com/edifact-o/`, which might need to be adjusted according to your actual namespace.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ZuschlagProzentsatz a sh:NodeShape ;
    sh:property [ sh:datatype xsd:float ;
            sh:maxCount 15 ;
            sh:maxLength 5 ;
            sh:message "The data element 5245 or 5482 is missing in the PCD segment, i.e. the percentage type and amount of the surcharge." ;
            sh:minLength 1 ;
            sh:path edifact-o:hasChargePercentage ] ;
    sh:targetClass edifact-o:item .



=== Translation #80 ===
The SHACL shape :BruttoendbetragRechnunng applies to all instances of the class edifact-o:item, requiring either the property p2p-o-inv:hasAllowanceAmount or edifact-o:hasDiscountAmount to be present at most twice with a maximum length of 13 characters, and failing validation with the message "The segment MOA+8, MOA+23 or MOA+204 is incorrect, i.e. the indication of the gross final amount of the invoice" if this condition is not met.

Here is the SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix p2p-o-inv: <http://example.com/p2p-o-inv/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BruttoendbetragRechnung a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path ( p2p-o-inv:hasAllowanceAmount edifact-o:hasDiscountAmount ) ;
    sh:maxCount 2 ;
    sh:datatype xsd:string ;
    sh:maxLength 13 ;
    sh:message "The segment MOA+8, MOA+23 or MOA+204 is incorrect, i.e. the indication of the gross final amount of the invoice" ;
  ] .
```

Let me know if you'd like me to explain any part of this shape!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-inv: <https://purl.org/p2p-o/invoice#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BruttoendbetragRechnunng a sh:NodeShape ;
    sh:message "The segment MOA+8, MOA+23 or MOA+204 is incorrect, i.e. the indication of the gross final amount of the invoice." ;
    sh:or ( [ sh:maxCount 2 ;
                sh:maxLength 13 ;
                sh:path p2p-o-inv:hasAllowanceAmount ] [ sh:maxCount 2 ;
                sh:maxLength 13 ;
                sh:path edifact-o:hasDiscountAmount ] ) ;
    sh:targetClass edifact-o:item .



=== Translation #81 ===
The SHACL shape :SteuerangabenItem targets all instances of the class edifact-o:item, specifying that each instance must have a property edifact-o:hasVATrate with a maximum of 5 values, each with a maximum string length of 5 characters, and failure to comply will result in the validation error message "The TAX segment at item level is incorrect, i.e. the specification of the tax rate; TAX; SG 21; header part; is incorrect."

Here is the equivalent SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:SteuerangabenItem a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasVATrate ;
    sh:maxCount 5 ;
    sh:datatype xsd:string ;
    sh:maxLength 5 ;
    sh:message "The TAX segment at item level is incorrect, i.e. the specification of the tax rate; TAX; SG 21; header part; is incorrect."
  ] .
```
Note that I assumed `xsd:` is a prefix for the XML Schema namespace `http://www.w3.org/2001/XMLSchema#`, which is commonly used for specifying data types. If this is not the case, please let me know and I'll adapt the prefix accordingly.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:SteuerangabenItem a sh:NodeShape ;
    sh:property [ sh:maxCount 5 ;
            sh:maxLength 5 ;
            sh:message "The TAX segment at item level is incorrect, i.e. the specification of the tax rate; TAX; SG 21; header part; is incorrect." ;
            sh:path edifact-o:hasVATrate ] ;
    sh:targetClass edifact-o:item .



=== Translation #82 ===
The SHACL shape :Produktidentifikation applies to all instances of the class edifact-o:item, requiring exactly one string value (xsd:string) for the property p2p-o-item:itemName, and will report validation errors with the message "The data element 7008 in the IMD segment is incorrect, i.e. the specification of the article name."

Here is the converted SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#>.
@prefix edifact-o: <http://example.org/edifact-o/>.
@prefix p2p-o-item: <http://example.org/p2p-o-item/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

:Produktidentifikation
  a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path p2p-o-item:itemName ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The data element 7008 in the IMD segment is incorrect, i.e. the specification of the article name."
  ].
```
Note that I assumed some namespace prefixes (`edifact-o`, `p2p-o-item`) that might need to be adjusted according to your specific ontology.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-item: <https://purl.org/p2p-o/item#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Produktidentifikation a sh:NodeShape ;
    sh:property [ sh:datatype xsd:string ;
            sh:message "The data element 7008 in the IMD segment is incorrect, i.e. the specification of the article name." ;
            sh:minCount 1 ;
            sh:path p2p-o-item:itemName ] ;
    sh:targetClass edifact-o:item .



=== Translation #83 ===
The SHACL shape :Steuerbetrag applies to all instances of the class edifact-o:item, specifying that each item must have exactly one edifact-o:hasTaxAmount property with a string value not exceeding 13 characters in length, and if this constraint is violated, the error message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified." will be displayed during validation.

Here is the converted SHACL shape in Turtle syntax:

```ttl
_PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sh: <http://www.w3.org/ns/shacl#>
PREFIX edifact-o: <http://example.org/edifact-o/>

:Steuerbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasTaxAmount ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 13 ;
    sh:message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified."
  ] .
```

Let me know if you have any questions or need further assistance!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Steuerbetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:maxLength 13 ;
            sh:message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified." ;
            sh:path edifact-o:hasTaxAmount ] ;
    sh:targetClass edifact-o:item .



=== Translation #84 ===
The SHACL shape :ZuAbschlagbetrag applies to all instances of the class edifact-o:item, requiring either exactly one or two occurrences of the property p2p-o-inv:hasAllowanceAmount with a maximum length of 18 characters, or exactly one or two occurrences of the property edifact-o:hasDiscountAmount with a maximum length of 18 characters; if neither condition is met, the validation will fail with the message "The segment MOA+23 or MOA+204 is incorrect, i.e. the specification of the surcharge or discount amount is incorrect."

Here is the converted SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix p2p-o-inv: <http://example.com/p2p-o-inv/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

:ZuAbschlagbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path p2p-o-inv:hasAllowanceAmount ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 2 ;
    sh:maxLength 18 ;
  ] , [
    sh:path edifact-o:hasDiscountAmount ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 2 ;
    sh:maxLength 18 ;
  ] ;
  sh:or (
    [ sh:path p2p-o-inv:hasAllowanceAmount ] 
    [ sh:path edifact-o:hasDiscountAmount ]
  ) ;
  sh:message "The segment MOA+23 or MOA+204 is incorrect, i.e. the specification of the surcharge or discount amount is incorrect." .
```

Note that I assumed some namespace prefixes, feel free to adjust them according to your needs.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix p2p-o-inv: <https://purl.org/p2p-o/invoice#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:ZuAbschlagbetrag a sh:NodeShape ;
    sh:message "The segment MOA+23 or MOA+204 is incorrect, i.e. the specification of the surcharge or discount amount is incorrect." ;
    sh:or ( [ sh:maxCount 2 ;
                sh:maxLength 18 ;
                sh:message "Das Segment MOA+23 fehlt" ;
                sh:path p2p-o-inv:hasAllowanceAmount ] [ sh:maxCount 2 ;
                sh:maxLength 18 ;
                sh:message "Das Segment MOA+204 fehlt" ;
                sh:path edifact-o:hasDiscountAmount ] ) ;
    sh:targetClass edifact-o:item .



=== Translation #85 ===
The SHACL shape :BasisZuAbschlagbetrag applies to all instances of the class edifact-o:item, specifying a property constraint on edifact-o:hasAdditionDeductionBasis that requires exactly one string value with a maximum length of 13 characters, and will produce the message "The MOA+25 segment is incorrect, i.e. the base amount of the surcharge or discount is incorrect." if this constraint is violated during validation.

Here is the SHACL shape in Turtle syntax:
```
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix edifact-o: <http://example.org/edifact-o/> .

:BasisZuAbschlagbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:item ;
  sh:property [
    sh:path edifact-o:hasAdditionDeductionBasis ;
    sh:datatype xsd:string ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:maxLength 13 ;
    sh:message "The MOA+25 segment is incorrect, i.e. the base amount of the surcharge or discount is incorrect." ;
  ] .
```
Let me know if this meets your requirements!

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:BasisZuAbschlagbetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:maxLength 13 ;
            sh:message "The MOA+25 segment is incorrect, i.e. the base amount of the surcharge or discount is incorrect." ;
            sh:path edifact-o:hasAdditionDeductionBasis ] ;
    sh:targetClass edifact-o:item .



=== Translation #86 ===
The SHACL shape :SteuerangabenItem applies to all instances of the class edifact-o:InvoiceDetails, enforcing a constraint on the property edifact-o:hasVATrate, which must appear at most 5 times and have a string value with a maximum length of 5 characters, and will produce the message "The TAX segment at totals level is incorrect, i.e. the specification of the tax rate" if violated.

Here is the converted SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:SteuerangabenItem a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasVATrate ;
    sh:maxCount 5 ;
    sh:datatype xsd:string ;
    sh:maxLength 5 ;
    sh:message "The TAX segment at totals level is incorrect, i.e. the specification of the tax rate"
  ] .
```

Note that I assumed the prefix `edifact-o:` is bound to `http://example.com/edifact-o#`, which you may need to adjust according to your actual namespace.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:SteuerangabenItem a sh:NodeShape ;
    sh:property [ sh:maxCount 5 ;
            sh:maxLength 5 ;
            sh:message "The TAX segment at totals level is incorrect, i.e. the specification of the tax rate." ;
            sh:path edifact-o:hasVATrate ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #87 ===
The SHACL shape :Steuerbetrag targets all instances of the class edifact-o:InvoiceDetails, enforcing a single-valued (maxCount 1) property edifact-o:hasTaxAmount, which must be a string of maximum 13 characters in length, and returns the error message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified" if the constraint is violated.

Here is the converted SHACL shape in Turtle syntax:
```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:Steuerbetrag a sh:NodeShape ;
  sh:targetClass edifact-o:InvoiceDetails ;
  sh:property [
    sh:path edifact-o:hasTaxAmount ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:maxLength 13 ;
    sh:message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified"
  ] .
```
Note that I've assumed the `edifact-o` prefix is bound to the IRI `http://example.com/edifact-o/`, which you may need to adjust depending on your specific use case.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Steuerbetrag a sh:NodeShape ;
    sh:property [ sh:maxCount 1 ;
            sh:maxLength 13 ;
            sh:message "The segment MOA+124 is incorrect, i.e. the tax amount is not specified." ;
            sh:path edifact-o:hasTaxAmount ] ;
    sh:targetClass edifact-o:InvoiceDetails .



=== Translation #88 ===
The SHACL shape :Prozesszugehoerigkeit applies to all instances of the class edifact-o:E-Invoice, mandating a single occurrence (exactly one) of the property edifact-o:belongsToProcess with a value of "ProcessExample", and will result in validation failure if it is absent, duplicated, or has a different value.

Here is the equivalent SHACL shape in Turtle syntax:

```
@prefix edifact-o: <http://example.com/edifact-o/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .

:Prozesszugehoerigkeit
  a sh:NodeShape ;
  sh:targetClass edifact-o:E-Invoice ;
  sh:property [
    sh:path edifact-o:belongsToProcess ;
    sh:datatype xsd:string ;
    sh:in ( "ProcessExample" ) ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "Must have exactly one belongsToProcess with value 'ProcessExample'" ;
  ] .
```

Note that I assumed `xsd:` prefix is already defined in the Turtle document, if not, you need to add `@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .` as well.

Original:
@prefix : <http://mapping.example.com/> .
@prefix edifact-o: <https://purl.org/edifact/ontology#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Prozesszugehoerigkeit a sh:NodeShape ;
    sh:property [ sh:hasValue "ProcessExample" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:path edifact-o:belongsToProcess ] ;
    sh:targetClass edifact-o:E-Invoice .


